<?php
	/*
	 * AUTO-GENERATED FILE on 23/02/2017 14:20:59 BY FactoryGenerator.class.php
	 */

abstract class FactoryVehicule {

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Vehicule11]*/	/*[/TAG-Vehicule11]*/


	public static function getFromTableVehicule($id=-1) {
		//Generated by FactoryGenerator::generateGetAllFromTable()
		$listeObjet = array();
		// Lancement de la requete
		if (empty(self::$_requete)) {
			$requete = 'SELECT * FROM `vehicule`';
		} else {
			$requete = self::$_requete;
		}
		if (!is_array($id)) {
			if ($id > -1) {
				$requete .= ' WHERE id = :id';
				//Il faut que le parametre soit dans un array pour le BIND
				$id = array(':id' => $id);
			} else {
				/* Tous les objets ==> il faut les ordonner */
				$requete .= ' ORDER BY id ASC';
			}
		} else {
			$requete .= ' WHERE id IN ('.implode(",",$id).') ORDER BY id ASC';
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($id) || $id > -1) {
			database::getInstance() -> bind($id);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table vehicule');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		
	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Vehicule2]*/	/*[/TAG-Vehicule2]*/

		/* Traitement des donnees */
		foreach ($datas AS $data) {
			/* objet par defaut */
			$listeObjet[] = new Vehicule($data['vehiculeId'],$data['vehiculeNom'],$data['vehiculeDesc'],$data['vehiculeType'],$data['vehiculeVie'],$data['vehiculeAttaque'],$data['vehiculeDefense'],$data['vehiculeDeplacement']);
		
	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getFromTableVehicule1]*/	/*[/TAG-getFromTableVehicule1]*/

		}
		if (!empty($listeObjet) && sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableVehiculeId($vehiculeid=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `vehicule` ';
		if ($vehiculeid == 0) {
			$requete .= 'WHERE vehiculeid > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE vehiculeid = :vehiculeid ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$vehiculeid = array(':vehiculeid' => $vehiculeid);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($vehiculeid) || $vehiculeid > 0) {
			database::getInstance() -> bind($vehiculeid);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table vehicule');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Vehicule($data['vehiculeId'],$data['vehiculeNom'],$data['vehiculeDesc'],$data['vehiculeType'],$data['vehiculeVie'],$data['vehiculeAttaque'],$data['vehiculeDefense'],$data['vehiculeDeplacement']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableVehiculeNom($vehiculenom=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `vehicule` ';
		if ($vehiculenom == 0) {
			$requete .= 'WHERE vehiculenom > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE vehiculenom = :vehiculenom ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$vehiculenom = array(':vehiculenom' => $vehiculenom);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($vehiculenom) || $vehiculenom > 0) {
			database::getInstance() -> bind($vehiculenom);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table vehicule');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Vehicule($data['vehiculeId'],$data['vehiculeNom'],$data['vehiculeDesc'],$data['vehiculeType'],$data['vehiculeVie'],$data['vehiculeAttaque'],$data['vehiculeDefense'],$data['vehiculeDeplacement']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableVehiculeDesc($vehiculedesc=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `vehicule` ';
		if ($vehiculedesc == 0) {
			$requete .= 'WHERE vehiculedesc > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE vehiculedesc = :vehiculedesc ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$vehiculedesc = array(':vehiculedesc' => $vehiculedesc);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($vehiculedesc) || $vehiculedesc > 0) {
			database::getInstance() -> bind($vehiculedesc);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table vehicule');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Vehicule($data['vehiculeId'],$data['vehiculeNom'],$data['vehiculeDesc'],$data['vehiculeType'],$data['vehiculeVie'],$data['vehiculeAttaque'],$data['vehiculeDefense'],$data['vehiculeDeplacement']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableVehiculeType($vehiculetype=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `vehicule` ';
		if ($vehiculetype == 0) {
			$requete .= 'WHERE vehiculetype > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE vehiculetype = :vehiculetype ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$vehiculetype = array(':vehiculetype' => $vehiculetype);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($vehiculetype) || $vehiculetype > 0) {
			database::getInstance() -> bind($vehiculetype);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table vehicule');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Vehicule($data['vehiculeId'],$data['vehiculeNom'],$data['vehiculeDesc'],$data['vehiculeType'],$data['vehiculeVie'],$data['vehiculeAttaque'],$data['vehiculeDefense'],$data['vehiculeDeplacement']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableVehiculeVie($vehiculevie=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `vehicule` ';
		if ($vehiculevie == 0) {
			$requete .= 'WHERE vehiculevie > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE vehiculevie = :vehiculevie ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$vehiculevie = array(':vehiculevie' => $vehiculevie);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($vehiculevie) || $vehiculevie > 0) {
			database::getInstance() -> bind($vehiculevie);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table vehicule');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Vehicule($data['vehiculeId'],$data['vehiculeNom'],$data['vehiculeDesc'],$data['vehiculeType'],$data['vehiculeVie'],$data['vehiculeAttaque'],$data['vehiculeDefense'],$data['vehiculeDeplacement']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableVehiculeAttaque($vehiculeattaque=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `vehicule` ';
		if ($vehiculeattaque == 0) {
			$requete .= 'WHERE vehiculeattaque > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE vehiculeattaque = :vehiculeattaque ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$vehiculeattaque = array(':vehiculeattaque' => $vehiculeattaque);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($vehiculeattaque) || $vehiculeattaque > 0) {
			database::getInstance() -> bind($vehiculeattaque);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table vehicule');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Vehicule($data['vehiculeId'],$data['vehiculeNom'],$data['vehiculeDesc'],$data['vehiculeType'],$data['vehiculeVie'],$data['vehiculeAttaque'],$data['vehiculeDefense'],$data['vehiculeDeplacement']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableVehiculeDefense($vehiculedefense=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `vehicule` ';
		if ($vehiculedefense == 0) {
			$requete .= 'WHERE vehiculedefense > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE vehiculedefense = :vehiculedefense ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$vehiculedefense = array(':vehiculedefense' => $vehiculedefense);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($vehiculedefense) || $vehiculedefense > 0) {
			database::getInstance() -> bind($vehiculedefense);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table vehicule');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Vehicule($data['vehiculeId'],$data['vehiculeNom'],$data['vehiculeDesc'],$data['vehiculeType'],$data['vehiculeVie'],$data['vehiculeAttaque'],$data['vehiculeDefense'],$data['vehiculeDeplacement']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableVehiculeDeplacement($vehiculedeplacement=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `vehicule` ';
		if ($vehiculedeplacement == 0) {
			$requete .= 'WHERE vehiculedeplacement > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE vehiculedeplacement = :vehiculedeplacement ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$vehiculedeplacement = array(':vehiculedeplacement' => $vehiculedeplacement);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($vehiculedeplacement) || $vehiculedeplacement > 0) {
			database::getInstance() -> bind($vehiculedeplacement);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table vehicule');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Vehicule($data['vehiculeId'],$data['vehiculeNom'],$data['vehiculeDesc'],$data['vehiculeType'],$data['vehiculeVie'],$data['vehiculeAttaque'],$data['vehiculeDefense'],$data['vehiculeDeplacement']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}


	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Vehicule21]*/	/*[/TAG-Vehicule21]*/


}
?>