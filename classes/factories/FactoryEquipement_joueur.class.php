<?php
	/*
	 * AUTO-GENERATED FILE on 03/04/2017 15:27:43 BY FactoryGenerator.class.php
	 */

abstract class FactoryEquipement_joueur {

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Equipement_joueur11]*/	/*[/TAG-Equipement_joueur11]*/


	public static function getFromTableEquipement_joueur($id=-1) {
		//Generated by FactoryGenerator::generateGetAllFromTable() on 03/04/2017 15:27:43
		$listeObjet = array();
		// Lancement de la requete
		if (empty(self::$_requete)) {
			$requete = 'SELECT * FROM `equipement_joueur`';
		} else {
			$requete = self::$_requete;
		}
		if (!is_array($id)) {
			if ($id > -1) {
				$requete .= ' WHERE id = :id';
				//Il faut que le parametre soit dans un array pour le BIND
				$id = array(':id' => $id);
			} else {
				/* Tous les objets ==> il faut les ordonner */
				$requete .= ' ORDER BY id ASC';
			}
		} else {
			$requete .= ' WHERE id IN ('.implode(",",$id).') ORDER BY id ASC';
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($id) || $id > -1) {
			database::getInstance() -> bind($id);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table equipement_joueur');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		
	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Equipement_joueur2]*/	/*[/TAG-Equipement_joueur2]*/

		/* Traitement des donnees */
		foreach ($datas AS $data) {
			/* objet par defaut */
			$listeObjet[] = new Equipement_joueur($data['id'],$data['membre'],$data['unite_joueur'],$data['nom'],$data['description'],$data['categorie'],$data['cp'],$data['lp'],$data['mtcp'],$data['mtlp'],$data['dommage'],$data['msvg'],$data['gabarit'],$data['type'],$data['fo'],$data['sauvegarde'],$data['mmvt'],$data['encombrement'],$data['deux_mains'],$data['cout'],$data['date_creation'],$data['used'],$data['chemin'],$data['tile'],$data['usure'],$data['demontable'],$data['date_fin_reparation'],$data['ingame']);
		
	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getFromTableEquipement_joueur1]*/	/*[/TAG-getFromTableEquipement_joueur1]*/

		}
		if (!empty($listeObjet) && sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableMembre($membre=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK() on 03/04/2017 15:27:43
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `equipement_joueur` ';
		if ($membre == 0) {
			$requete .= 'WHERE membre > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE membre = :membre ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$membre = array(':membre' => $membre);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($membre) || $membre > 0) {
			database::getInstance() -> bind($membre);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table equipement_joueur');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Equipement_joueur($data['id'],$data['membre'],$data['unite_joueur'],$data['nom'],$data['description'],$data['categorie'],$data['cp'],$data['lp'],$data['mtcp'],$data['mtlp'],$data['dommage'],$data['msvg'],$data['gabarit'],$data['type'],$data['fo'],$data['sauvegarde'],$data['mmvt'],$data['encombrement'],$data['deux_mains'],$data['cout'],$data['date_creation'],$data['used'],$data['chemin'],$data['tile'],$data['usure'],$data['demontable'],$data['date_fin_reparation'],$data['ingame']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableUnite_joueur($unite_joueur=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK() on 03/04/2017 15:27:43
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `equipement_joueur` ';
		if ($unite_joueur == 0) {
			$requete .= 'WHERE unite_joueur > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE unite_joueur = :unite_joueur ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$unite_joueur = array(':unite_joueur' => $unite_joueur);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($unite_joueur) || $unite_joueur > 0) {
			database::getInstance() -> bind($unite_joueur);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table equipement_joueur');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Equipement_joueur($data['id'],$data['membre'],$data['unite_joueur'],$data['nom'],$data['description'],$data['categorie'],$data['cp'],$data['lp'],$data['mtcp'],$data['mtlp'],$data['dommage'],$data['msvg'],$data['gabarit'],$data['type'],$data['fo'],$data['sauvegarde'],$data['mmvt'],$data['encombrement'],$data['deux_mains'],$data['cout'],$data['date_creation'],$data['used'],$data['chemin'],$data['tile'],$data['usure'],$data['demontable'],$data['date_fin_reparation'],$data['ingame']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableCategorie($categorie=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK() on 03/04/2017 15:27:43
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `equipement_joueur` ';
		if ($categorie == 0) {
			$requete .= 'WHERE categorie > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE categorie = :categorie ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$categorie = array(':categorie' => $categorie);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($categorie) || $categorie > 0) {
			database::getInstance() -> bind($categorie);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table equipement_joueur');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Equipement_joueur($data['id'],$data['membre'],$data['unite_joueur'],$data['nom'],$data['description'],$data['categorie'],$data['cp'],$data['lp'],$data['mtcp'],$data['mtlp'],$data['dommage'],$data['msvg'],$data['gabarit'],$data['type'],$data['fo'],$data['sauvegarde'],$data['mmvt'],$data['encombrement'],$data['deux_mains'],$data['cout'],$data['date_creation'],$data['used'],$data['chemin'],$data['tile'],$data['usure'],$data['demontable'],$data['date_fin_reparation'],$data['ingame']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableGabarit($gabarit=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK() on 03/04/2017 15:27:43
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `equipement_joueur` ';
		if ($gabarit == 0) {
			$requete .= 'WHERE gabarit > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE gabarit = :gabarit ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$gabarit = array(':gabarit' => $gabarit);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($gabarit) || $gabarit > 0) {
			database::getInstance() -> bind($gabarit);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table equipement_joueur');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Equipement_joueur($data['id'],$data['membre'],$data['unite_joueur'],$data['nom'],$data['description'],$data['categorie'],$data['cp'],$data['lp'],$data['mtcp'],$data['mtlp'],$data['dommage'],$data['msvg'],$data['gabarit'],$data['type'],$data['fo'],$data['sauvegarde'],$data['mmvt'],$data['encombrement'],$data['deux_mains'],$data['cout'],$data['date_creation'],$data['used'],$data['chemin'],$data['tile'],$data['usure'],$data['demontable'],$data['date_fin_reparation'],$data['ingame']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableType($type=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK() on 03/04/2017 15:27:43
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `equipement_joueur` ';
		if ($type == 0) {
			$requete .= 'WHERE type > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE type = :type ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$type = array(':type' => $type);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($type) || $type > 0) {
			database::getInstance() -> bind($type);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table equipement_joueur');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Equipement_joueur($data['id'],$data['membre'],$data['unite_joueur'],$data['nom'],$data['description'],$data['categorie'],$data['cp'],$data['lp'],$data['mtcp'],$data['mtlp'],$data['dommage'],$data['msvg'],$data['gabarit'],$data['type'],$data['fo'],$data['sauvegarde'],$data['mmvt'],$data['encombrement'],$data['deux_mains'],$data['cout'],$data['date_creation'],$data['used'],$data['chemin'],$data['tile'],$data['usure'],$data['demontable'],$data['date_fin_reparation'],$data['ingame']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableTile($tile=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK() on 03/04/2017 15:27:43
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `equipement_joueur` ';
		if ($tile == 0) {
			$requete .= 'WHERE tile > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE tile = :tile ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$tile = array(':tile' => $tile);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($tile) || $tile > 0) {
			database::getInstance() -> bind($tile);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table equipement_joueur');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Equipement_joueur($data['id'],$data['membre'],$data['unite_joueur'],$data['nom'],$data['description'],$data['categorie'],$data['cp'],$data['lp'],$data['mtcp'],$data['mtlp'],$data['dommage'],$data['msvg'],$data['gabarit'],$data['type'],$data['fo'],$data['sauvegarde'],$data['mmvt'],$data['encombrement'],$data['deux_mains'],$data['cout'],$data['date_creation'],$data['used'],$data['chemin'],$data['tile'],$data['usure'],$data['demontable'],$data['date_fin_reparation'],$data['ingame']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}


	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Equipement_joueur21]*/
	
	/**
	 * Retourne la liste des objets du joueur endomages a plus de _DAMAGE_MIN_ %
	 * @param unknown $idjoueur
	 * @param number $damageMin
	 * @throws Exception
	 * @return array <multitype:Equipement_joueur , unknown>
	 */
	public static function getDamagedEquipment($idjoueur) {
		$listeObjet = array();
		/* Lancement de la requete */
		$requete = 'SELECT * FROM `equipement_joueur` WHERE membre = '.$idjoueur.'  and usure <= '._DAMAGE_MIN_;//and used = 0
		if (! database::getInstance() -> executeRequete($requete)) {
			throw new Exception('Impossible de lire la table equipement_joueur');
		}
		/* Recuperation des donnees */
		$datas = database::getInstance() -> getTableauResultat();
		/* Traitement des donnees */
		foreach ($datas AS $data) {
			$listeObjet[] = new Equipement_joueur($data['id'],$data['membre'],$data['unite_joueur'],$data['nom'],$data['description'],$data['categorie'],$data['cp'],$data['lp'],$data['mtcp'],$data['mtlp'],$data['dommage'],$data['msvg'],$data['gab'],$data['type'],$data['fo'],$data['sauvegarde'],$data['mmvt'],$data['encombrement'],$data['deux_mains'],$data['cout'],$data['date_creation'],$data['used'],$data['chemin'],$data['tile'],$data['usure'],$data['demontable']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}
	
	/**
	 * Fonction retournant la liste des objets qui peuvent se demonter
	 * @param unknown $idjoueur
	 * @throws Exception
	 * @return array <multitype:Equipement_joueur , unknown>
	 */
	public static function getRemovableEquipment($idjoueur) {
		$listeObjet = array();
		/* Lancement de la requete */
		$requete = 'SELECT * FROM `equipement_joueur` WHERE membre = '.$idjoueur.' and used = 0 and demontable = 1';
		if (! database::getInstance() -> executeRequete($requete)) {
			throw new Exception('Impossible de lire la table equipement_joueur');
		}
		/* Recuperation des donnees */
		$datas = database::getInstance() -> getTableauResultat();
		/* Traitement des donnees */
		foreach ($datas AS $data) {
			$listeObjet[] = new Equipement_joueur($data['id'],$data['membre'],$data['unite_joueur'],$data['nom'],$data['description'],$data['categorie'],$data['cp'],$data['lp'],$data['mtcp'],$data['mtlp'],$data['dommage'],$data['msvg'],$data['gab'],$data['type'],$data['fo'],$data['sauvegarde'],$data['mmvt'],$data['encombrement'],$data['deux_mains'],$data['cout'],$data['date_creation'],$data['used'],$data['chemin'],$data['tile'],$data['usure'],$data['demontable']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}
	
	public static function getCustomizableEquipment($idjoueur) {
		//TODO
	}
	
	
	/*[/TAG-Equipement_joueur21]*/


}
?>