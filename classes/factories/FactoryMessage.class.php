<?php
	/*
	 * AUTO-GENERATED FILE on 23/02/2017 14:20:58 BY FactoryGenerator.class.php
	 */

abstract class FactoryMessage {

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Message11]*/	/*[/TAG-Message11]*/


	public static function getFromTableMessage($id=-1) {
		//Generated by FactoryGenerator::generateGetAllFromTable()
		$listeObjet = array();
		// Lancement de la requete
		if (empty(self::$_requete)) {
			$requete = 'SELECT * FROM `message`';
		} else {
			$requete = self::$_requete;
		}
		if (!is_array($id)) {
			if ($id > -1) {
				$requete .= ' WHERE id = :id';
				//Il faut que le parametre soit dans un array pour le BIND
				$id = array(':id' => $id);
			} else {
				/* Tous les objets ==> il faut les ordonner */
				$requete .= ' ORDER BY id ASC';
			}
		} else {
			$requete .= ' WHERE id IN ('.implode(",",$id).') ORDER BY id ASC';
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($id) || $id > -1) {
			database::getInstance() -> bind($id);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table message');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		
	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Message2]*/	/*[/TAG-Message2]*/

		/* Traitement des donnees */
		foreach ($datas AS $data) {
			/* objet par defaut */
			$listeObjet[] = new Message($data['id'],$data['id_parent'],$data['id_auteur_message'],$data['contenu_message'],$data['date_creation_message'],$data['date_modification_message']);
		
	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getFromTableMessage1]*/	/*[/TAG-getFromTableMessage1]*/

		}
		if (!empty($listeObjet) && sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableId_auteur_message($id_auteur_message=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `message` ';
		if ($id_auteur_message == 0) {
			$requete .= 'WHERE id_auteur_message > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE id_auteur_message = :id_auteur_message ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$id_auteur_message = array(':id_auteur_message' => $id_auteur_message);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($id_auteur_message) || $id_auteur_message > 0) {
			database::getInstance() -> bind($id_auteur_message);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table message');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Message($data['id'],$data['id_parent'],$data['id_auteur_message'],$data['contenu_message'],$data['date_creation_message'],$data['date_modification_message']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableContenu_message($contenu_message=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `message` ';
		if ($contenu_message == 0) {
			$requete .= 'WHERE contenu_message > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE contenu_message = :contenu_message ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$contenu_message = array(':contenu_message' => $contenu_message);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($contenu_message) || $contenu_message > 0) {
			database::getInstance() -> bind($contenu_message);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table message');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Message($data['id'],$data['id_parent'],$data['id_auteur_message'],$data['contenu_message'],$data['date_creation_message'],$data['date_modification_message']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableDate_creation_message($date_creation_message=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `message` ';
		if ($date_creation_message == 0) {
			$requete .= 'WHERE date_creation_message > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE date_creation_message = :date_creation_message ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$date_creation_message = array(':date_creation_message' => $date_creation_message);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($date_creation_message) || $date_creation_message > 0) {
			database::getInstance() -> bind($date_creation_message);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table message');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Message($data['id'],$data['id_parent'],$data['id_auteur_message'],$data['contenu_message'],$data['date_creation_message'],$data['date_modification_message']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableDate_modification_message($date_modification_message=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `message` ';
		if ($date_modification_message == 0) {
			$requete .= 'WHERE date_modification_message > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE date_modification_message = :date_modification_message ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$date_modification_message = array(':date_modification_message' => $date_modification_message);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($date_modification_message) || $date_modification_message > 0) {
			database::getInstance() -> bind($date_modification_message);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table message');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Message($data['id'],$data['id_parent'],$data['id_auteur_message'],$data['contenu_message'],$data['date_creation_message'],$data['date_modification_message']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}


	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Message21]*/	/*[/TAG-Message21]*/


}
?>