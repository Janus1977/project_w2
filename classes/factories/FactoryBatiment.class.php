<?php
	/*
	 * AUTO-GENERATED FILE on 23/02/2017 14:20:58 BY FactoryGenerator.class.php
	 */

abstract class FactoryBatiment {

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Batiment11]*/	/*[/TAG-Batiment11]*/


	public static function getFromTableBatiment($id=-1) {
		//Generated by FactoryGenerator::generateGetAllFromTable()
		$listeObjet = array();
		// Lancement de la requete
		if (empty(self::$_requete)) {
			$requete = 'SELECT * FROM `batiment`';
		} else {
			$requete = self::$_requete;
		}
		if (!is_array($id)) {
			if ($id > -1) {
				$requete .= ' WHERE id = :id';
				//Il faut que le parametre soit dans un array pour le BIND
				$id = array(':id' => $id);
			} else {
				/* Tous les objets ==> il faut les ordonner */
				$requete .= ' ORDER BY id ASC';
			}
		} else {
			$requete .= ' WHERE id IN ('.implode(",",$id).') ORDER BY id ASC';
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($id) || $id > -1) {
			database::getInstance() -> bind($id);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table batiment');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		
	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Batiment2]*/	/*[/TAG-Batiment2]*/

		/* Traitement des donnees */
		foreach ($datas AS $data) {
			/* objet par defaut */
			$listeObjet[] = new Batiment($data['batimentId'],$data['batimentNom'],$data['batimentDesc'],$data['batimentVie'],$data['batimentDefense'],$data['batimentBouclier'],$data['production']);
		
	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getFromTableBatiment1]*/	/*[/TAG-getFromTableBatiment1]*/

		}
		if (!empty($listeObjet) && sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableBatimentId($batimentid=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `batiment` ';
		if ($batimentid == 0) {
			$requete .= 'WHERE batimentid > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE batimentid = :batimentid ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$batimentid = array(':batimentid' => $batimentid);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($batimentid) || $batimentid > 0) {
			database::getInstance() -> bind($batimentid);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table batiment');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Batiment($data['batimentId'],$data['batimentNom'],$data['batimentDesc'],$data['batimentVie'],$data['batimentDefense'],$data['batimentBouclier'],$data['production']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableBatimentNom($batimentnom=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `batiment` ';
		if ($batimentnom == 0) {
			$requete .= 'WHERE batimentnom > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE batimentnom = :batimentnom ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$batimentnom = array(':batimentnom' => $batimentnom);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($batimentnom) || $batimentnom > 0) {
			database::getInstance() -> bind($batimentnom);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table batiment');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Batiment($data['batimentId'],$data['batimentNom'],$data['batimentDesc'],$data['batimentVie'],$data['batimentDefense'],$data['batimentBouclier'],$data['production']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableBatimentDesc($batimentdesc=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `batiment` ';
		if ($batimentdesc == 0) {
			$requete .= 'WHERE batimentdesc > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE batimentdesc = :batimentdesc ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$batimentdesc = array(':batimentdesc' => $batimentdesc);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($batimentdesc) || $batimentdesc > 0) {
			database::getInstance() -> bind($batimentdesc);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table batiment');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Batiment($data['batimentId'],$data['batimentNom'],$data['batimentDesc'],$data['batimentVie'],$data['batimentDefense'],$data['batimentBouclier'],$data['production']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableBatimentVie($batimentvie=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `batiment` ';
		if ($batimentvie == 0) {
			$requete .= 'WHERE batimentvie > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE batimentvie = :batimentvie ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$batimentvie = array(':batimentvie' => $batimentvie);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($batimentvie) || $batimentvie > 0) {
			database::getInstance() -> bind($batimentvie);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table batiment');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Batiment($data['batimentId'],$data['batimentNom'],$data['batimentDesc'],$data['batimentVie'],$data['batimentDefense'],$data['batimentBouclier'],$data['production']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableBatimentDefense($batimentdefense=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `batiment` ';
		if ($batimentdefense == 0) {
			$requete .= 'WHERE batimentdefense > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE batimentdefense = :batimentdefense ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$batimentdefense = array(':batimentdefense' => $batimentdefense);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($batimentdefense) || $batimentdefense > 0) {
			database::getInstance() -> bind($batimentdefense);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table batiment');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Batiment($data['batimentId'],$data['batimentNom'],$data['batimentDesc'],$data['batimentVie'],$data['batimentDefense'],$data['batimentBouclier'],$data['production']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}

	public static function getFromExtTableBatimentBouclier($batimentbouclier=0) {
		//Generated by FactoryGenerator::generateGetFromTableFromFK()
		$listeObjet = array();
		// Lancement de la requete
		$requete = 'SELECT * FROM `batiment` ';
		if ($batimentbouclier == 0) {
			$requete .= 'WHERE batimentbouclier > 0 ORDER BY id ASC';
		} else {
			$requete .= 'WHERE batimentbouclier = :batimentbouclier ORDER BY id ASC';
			//Il faut que le parametre soit dans un array pour le BIND
			$batimentbouclier = array(':batimentbouclier' => $batimentbouclier);
		}
		database::getInstance() -> prepareRequete($requete);
		if (is_array($batimentbouclier) || $batimentbouclier > 0) {
			database::getInstance() -> bind($batimentbouclier);
		}
		if (! database::getInstance() -> executeRequete()) {
			throw new Exception(__CLASS__.'::'.__FUNCTION__.'(): Impossible de lire la table batiment');
		}
		// Recuperation des donnees
		$datas = database::getInstance() -> getTableauResultat();
		// Traitement des donnees
		foreach ($datas AS $data) {
			$listeObjet[] = new Batiment($data['batimentId'],$data['batimentNom'],$data['batimentDesc'],$data['batimentVie'],$data['batimentDefense'],$data['batimentBouclier'],$data['production']);
		}
		if (sizeof($listeObjet) == 1) {
			$listeObjet = $listeObjet[0];
		}
		return $listeObjet;
	}


	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Batiment21]*/	/*[/TAG-Batiment21]*/


}
?>