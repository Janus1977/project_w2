<?php
		//Generated by ObjectGenerator::generate()
class Decor_utilise extends Decor {

	/* identifiant composite Carte */
	protected $_carte; /* bigint(20) unsigned */
	/* liste des objets Carte */
	protected $_oCarte; /* carte Object*/


	/* identifiant composite Tile */
	protected $_tile; /* bigint(20) unsigned */
	/* liste des objets Tile */
	protected $_oTile; /* tile Object*/

	protected $_empty = true; // permet de savoir si l'objet est vide

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Decor_utilise11]*/	/*[/TAG-Decor_utilise11]*/


	public function __construct($id=0,$nom='',$description='',$chemin='',$modificateur_vision=0,$date_creation='',$date_modification='',$dimension=0,$camp=0,$carte=0,$tile=0,$coordonnees=0) {
		//Generated by ObjectGenerator::generateConstruct()
		parent::__construct($id,$nom,$description,$chemin,$dimension,$camp,$modificateur_vision,$date_creation,$date_modification);
		$this->_carte = $carte;
		$this->_tile = $tile;
		$this->_coordonnees = $coordonnees;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__construct1]*/	/*[/TAG-__construct1]*/


	}


	public function __clone() {
		//Generated by ObjectGenerator::generateClone()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__clone1]*/	/*[/TAG-__clone1]*/

		//Sur le clonage d'un objet on supprime l'identifiant
		$this->_description .= ' / Clone '.__CLASS__.' ID '.$this->_id;
		$this->_id = 0;
	}


	public function setCarte($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCarte1]*/	/*[/TAG-setCarte1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_carte = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCarte2]*/	/*[/TAG-setCarte2]*/

	}

	protected function setCarteObject() {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCarteObject1]*/	/*[/TAG-setCarteObject1]*/

		if ($this->_carte > 0) {
			$this->_oCarte = FactoryCarte::getFromTableCarte($this->_carte);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCarteObject2]*/	/*[/TAG-setCarteObject2]*/

	}



	public function setTile($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTile1]*/	/*[/TAG-setTile1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_tile = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTile2]*/	/*[/TAG-setTile2]*/

	}

	protected function setTileObject() {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTileObject1]*/	/*[/TAG-setTileObject1]*/

		if ($this->_tile > 0) {
			$this->_oTile = FactoryTile::getFromTableTile($this->_tile);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTileObject2]*/	/*[/TAG-setTileObject2]*/

	}



	public function setCoordonnees($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCoordonnees1]*/	/*[/TAG-setCoordonnees1]*/

		$this->_coordonnees = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCoordonnees2]*/	/*[/TAG-setCoordonnees2]*/

	}




	public function getCarte() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_carte;
	}

	public function getCarteObject() {
		//Generated by ObjectGenerator::generateGet()
		if (empty($this->_oCarte)) {
			$this->setCarteObject();
		}
		if ((empty($this->_oCarte) || is_null($this->_oCarte))&& $this->_carte > 0) {
			$this->setCarteObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getCarteObject1]*/	/*[/TAG-getCarteObject1]*/

		return $this->_oCarte;
	}



	public function getTile() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_tile;
	}

	public function getTileObject() {
		//Generated by ObjectGenerator::generateGet()
		if (empty($this->_oTile)) {
			$this->setTileObject();
		}
		if ((empty($this->_oTile) || is_null($this->_oTile))&& $this->_tile > 0) {
			$this->setTileObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getTileObject1]*/	/*[/TAG-getTileObject1]*/

		return $this->_oTile;
	}



	public function getCoordonnees() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_coordonnees;
	}



	public function __toString() {
		//Generated by ObjectGenerator::generateToString()
		$chaine = 'Objet '.get_class($this).':<br/>';
		$chaine .= 'Le champ id vaut '.$this->getId().'<br/>';
		$chaine .= 'Le champ nom vaut '.$this->getNom().'<br/>';
		$chaine .= 'Le champ description vaut '.$this->getDescription().'<br/>';
		$chaine .= 'Le champ chemin vaut '.$this->getChemin().'<br/>';
		$chaine .= 'Le champ modificateur_vision vaut '.$this->getModificateur_vision().'<br/>';
		$chaine .= 'Le champ date_creation vaut '.$this->getDate_creation().'<br/>';
		$chaine .= 'Le champ date_modification vaut '.$this->getDate_modification().'<br/>';
		$chaine .= 'Le champ dimension vaut '.$this->getDimension().'<br/>';
		$chaine .= 'Le champ camp vaut '.$this->getCamp().'<br/>';
		$chaine .= 'Le champ carte vaut '.$this->getCarte().'<br/>';
		$chaine .= 'Le champ tile vaut '.$this->getTile().'<br/>';
		$chaine .= 'Le champ coordonnees vaut '.$this->getCoordonnees().'<br/>';

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__toString1]*/	/*[/TAG-__toString1]*/

		return $chaine;
	}

	public function save() {
		//Generated by ObjectGenerator::generateSave()
		if ($this->getId() > 0) {
			/* un identifiant superieur a 0 implique un ancien objet => UPDATE */
			$this->update();
		} else {
			$requete = 'INSERT INTO decor_utilise (id,nom,description,chemin,modificateur_vision,date_creation,date_modification,dimension,camp,carte,tile,coordonnees)';
			$requete .= ' VALUES ';
			$requete .= '(';
			$requete .= '\'\','; //valeur forcee pour l'insertion
			$requete .= '\''.$this->getNom().'\',';
			$requete .= '\''.$this->getDescription().'\',';
			$requete .= '\''.$this->getChemin().'\',';
			$requete .= $this->getModificateur_vision().',';
			$laDate = $this->getDate_creation();
			if (strlen($laDate) > 0) {
				$requete .= '\''.$laDate.'\',';
			} else {
				$requete .= 'NOW(),';
			}
			$laDate = $this->getDate_modification();
			if (strlen($laDate) > 0) {
				$requete .= '\''.$laDate.'\',';
			} else {
				$requete .= 'NOW(),';
			}
			$requete .= $this->getDimension().',';
			$requete .= $this->getCamp().',';
			$requete .= $this->getCarte().',';
			$requete .= $this->getTile().',';
			$requete .= $this->getCoordonnees().',';
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ')';
			return $requete;
		}
	}

	public function update() {
		//Generated by ObjectGenerator::generateUpdate()
		if ($this->getId() == 0 || $this->getId() == null) {
			/* un identifiant 0 ou null implique un nouvel objet => INSERT */
			$this->save();
		} else {
			$requete = 'UPDATE decor_utilise SET ';
			$requete .= 'nom = \''.$this->getNom().'\',';
			$requete .= 'description = \''.$this->getDescription().'\',';
			$requete .= 'chemin = \''.$this->getChemin().'\',';
			$requete .= 'modificateur_vision = '.$this->getModificateur_vision().',';
			$laDate = $this->getDate_creation();
			if (strlen($laDate) > 0) {
				$requete .= 'date_creation = \''.$laDate.'\',';
			} else {
				$requete .= 'date_creation = NOW(),';
			}
			$laDate = $this->getDate_modification();
			if (strlen($laDate) > 0) {
				$requete .= 'date_modification = \''.$laDate.'\',';
			} else {
				$requete .= 'date_modification = NOW(),';
			}
			$requete .= 'dimension = '.$this->getDimension().',';
			$requete .= 'camp = '.$this->getCamp().',';
			$requete .= 'carte = '.$this->getCarte().',';
			$requete .= 'tile = '.$this->getTile().',';
			$requete .= 'coordonnees = '.$this->getCoordonnees().',';
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ' WHERE id = '.$this->getId();
			return $requete;
		}
	}

	public function delete() {
		//Generated by ObjectGenerator::generateDelete()
		if ($this->getId() == 0 || $this->getId() == null) {
			/* ERREUR A FAIRE SORTIR */
			/* TODO */
		} else {
			return 'DELETE FROM decor_utilise WHERE id = '.$this->getId();
		}
	}

	public function getParent() {
		//Generated by ObjectGenerator::generateGetParent()
		return ('parent::__construct($id,$nom,$description,$chemin,$modificateur_vision,$date_creation,$date_modification,$dimension,$camp,$carte,$tile,$coordonnees);');
	}

	public function getAttributes() {
		//Generated by ObjectGenerator::generateGetAttributes()
		$result = array();
		$result2 = array();
		$reflection = new ReflectionClass($this);
		$result = $reflection->getdefaultProperties();
		$result = array_keys($result);
		foreach ($result AS $data) {
			$result2[] = substr($data,1);
		}
		return $result2;
	}

	public function compareTo($object) {
		//Generated by ObjectGenerator::generateCompareTo()
		$data = array();
		if ($object instanceof Decor_utilise) {
			if ($this->_id != $object->getId()) {
				$data['id'] = $object->getId();
			}
			if ($this->_nom != $object->getNom()) {
				$data['nom'] = $object->getNom();
			}
			if ($this->_description != $object->getDescription()) {
				$data['description'] = $object->getDescription();
			}
			if ($this->_chemin != $object->getChemin()) {
				$data['chemin'] = $object->getChemin();
			}
			if ($this->_modificateur_vision != $object->getModificateur_vision()) {
				$data['modificateur_vision'] = $object->getModificateur_vision();
			}
			if ($this->_date_creation != $object->getDate_creation()) {
				$data['date_creation'] = $object->getDate_creation();
			}
			if ($this->_date_modification != $object->getDate_modification()) {
				$data['date_modification'] = $object->getDate_modification();
			}
			if ($this->_dimension != $object->getDimension()) {
				$data['dimension'] = $object->getDimension();
			}
			if ($this->_camp != $object->getCamp()) {
				$data['camp'] = $object->getCamp();
			}
			if ($this->_carte != $object->getCarte()) {
				$data['carte'] = $object->getCarte();
			}
			if ($this->_tile != $object->getTile()) {
				$data['tile'] = $object->getTile();
			}
			if ($this->_coordonnees != $object->getCoordonnees()) {
				$data['coordonnees'] = $object->getCoordonnees();
			}
		}
		return $data;
	}

	public function encodeDecodeJSON($json_str='') {
		//Generated by ObjectGenerator::generateEncodeDecodeJSON()
		if ($json_str == '') {
			// Objet standard a remplir
			$json= new stdClass();
			foreach ($this as $key => $value) {
				if (substr($key,0,1) == '_') {
					$key = substr($key,1);
					//on evite de faire sortir les objet fonctionnels
					if (strtolower(substr($key,0,1)) != 'o') {
						$json->$key = $value;
					}
				}
				$json->$key = $value;
			}
			return json_encode($json);
		} else {
			/* decodage et hydratation des datas JSON */
			$json = json_decode($json_str, 1);
			foreach ($json as $key => $value) {
				$method = 'set'.ucfirst($key);
				//Si la methode existe alors on l'utilise
				if (method_exists($this, $method)) {
					$this->$method($value);
				}
			}
		}
	}

	public function getClass() {
		//Generated by ObjectGenerator::generateGetClass()
		return get_class($this);
	}

	public function getEmpty() {
		//Generated by ObjectGenerator::generateIsEmpty()
		return $this->_empty;
	}

	public function affiche() {
		//Generated by ObjectGenerator::generateAffiche()
		/* Chargement de Smarty */
		require_once(_SMARTY_LOAD_);
		$smarty->assign('decor_utilise',$this);
		$smarty->assign('aListeMethodes',get_class_methods($this));
		$smarty->assign('urlVersMiniature',_URL_MINIATURES_.$this->getNom().'.jpg');
		/* Appel de l'affichage pour la classe en cour d'utilisation */
		$smarty->display(_TEMPLATES_BASE_.'classes/Decor_utilise.tpl');
	}


	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Decor_utilise21]*/	/*[/TAG-Decor_utilise21]*/

}
?>