<?php
		//Generated by ObjectGenerator::generate() on 03/04/2017 15:27:38
class Equipement {
	protected $_id; /* bigint(20) */
	protected $_nom; /* varchar(50) */
	protected $_description; /* text */

	/* identifiant composite Categorie */
	protected $_categorie; /* bigint(20) */
	/* liste des objets Categorie */
	protected $_oCategorie; /* categorie Object*/

	protected $_cp; /* varchar(10) */
	protected $_lp; /* varchar(10) */
	protected $_mtcp; /* varchar(5) */
	protected $_mtlp; /* varchar(5) */
	protected $_dommage; /* varchar(5) */
	protected $_msvg; /* varchar(5) */

	/* identifiant composite Gabarit */
	protected $_gabarit; /* bigint(20) unsigned */
	/* liste des objets Gabarit */
	protected $_oGabarit; /* gabarit Object*/


	/* identifiant composite Type */
	protected $_type; /* bigint(20) unsigned */
	/* liste des objets Type */
	protected $_oType; /* type Object*/

	protected $_fo; /* tinyint(5) unsigned */
	protected $_sauvegarde; /* tinyint(5) */
	protected $_mmvt; /* varchar(5) */
	protected $_encombrement; /* smallint(2) unsigned */
	protected $_deux_mains; /* tinyint(1) unsigned */
	protected $_cout; /* int(5) unsigned */
	protected $_date_creation; /* datetime */
	protected $_chemin; /* text */

	/* identifiant composite Tile */
	protected $_tile; /* bigint(20) */
	/* liste des objets Tile */
	protected $_oTile; /* tile Object*/

	protected $_usure; /* int(3) */
	protected $_demontable; /* tinyint(1) */
	protected $_date_fin_reparation; /* datetime */
	protected $_ingame; /* tinyint(1) */
	protected $_empty = true; // permet de savoir si l'objet est vide

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Equipement11]*/	/*[/TAG-Equipement11]*/


	public function __construct($id=0,$nom='',$description='',$categorie=0,$cp='',$lp='',$mtcp='',$mtlp='',$dommage='',$msvg='',$gabarit=0,$type=0,$fo=0,$sauvegarde=0,$mmvt='',$encombrement=0,$deux_mains=0,$cout=0,$date_creation='',$chemin='',$tile=0,$usure=0,$demontable=0,$date_fin_reparation='',$ingame=0) {
		//Generated by ObjectGenerator::generateConstruct() on 03/04/2017 15:27:38
		$this->_id = $id;
		$this->_nom = $nom;
		$this->_description = $description;
		$this->_categorie = $categorie;
		$this->_cp = $cp;
		$this->_lp = $lp;
		$this->_mtcp = $mtcp;
		$this->_mtlp = $mtlp;
		$this->_dommage = $dommage;
		$this->_msvg = $msvg;
		$this->_gabarit = $gabarit;
		$this->_type = $type;
		$this->_fo = $fo;
		$this->_sauvegarde = $sauvegarde;
		$this->_mmvt = $mmvt;
		$this->_encombrement = $encombrement;
		$this->_deux_mains = $deux_mains;
		$this->_cout = $cout;
		$this->_date_creation = $date_creation;
		$this->_chemin = $chemin;
		$this->_tile = $tile;
		$this->_usure = $usure;
		$this->_demontable = $demontable;
		$this->_date_fin_reparation = $date_fin_reparation;
		$this->_ingame = $ingame;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__construct1]*/	/*[/TAG-__construct1]*/


	}


	public function __clone() {
		//Generated by ObjectGenerator::generateClone() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__clone1]*/	/*[/TAG-__clone1]*/

		//Sur le clonage d'un objet on supprime l'identifiant
		$this->_description .= ' / Clone '.__CLASS__.' ID '.$this->_id;
		$this->_id = 0;
	}


	public function setId($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setId1]*/	/*[/TAG-setId1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if (!$this->getEmpty()) {
		return;
		}
		$this->_id = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setId2]*/	/*[/TAG-setId2]*/

	}



	public function setNom($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setNom1]*/	/*[/TAG-setNom1]*/

		$this->_nom = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setNom2]*/	/*[/TAG-setNom2]*/

	}



	public function setDescription($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDescription1]*/	/*[/TAG-setDescription1]*/

		$this->_description = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDescription2]*/	/*[/TAG-setDescription2]*/

	}



	public function setCategorie($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCategorie1]*/	/*[/TAG-setCategorie1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_categorie = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCategorie2]*/	/*[/TAG-setCategorie2]*/

	}

	protected function setCategorieObject() {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCategorieObject1]*/	/*[/TAG-setCategorieObject1]*/

		if ($this->_categorie > 0) {
			$this->_oCategorie = FactoryCategorie::getFromTableCategorie($this->_categorie);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCategorieObject2]*/	/*[/TAG-setCategorieObject2]*/

	}



	public function setCp($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCp1]*/	/*[/TAG-setCp1]*/

		$this->_cp = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCp2]*/	/*[/TAG-setCp2]*/

	}



	public function setLp($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setLp1]*/	/*[/TAG-setLp1]*/

		$this->_lp = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setLp2]*/	/*[/TAG-setLp2]*/

	}



	public function setMtcp($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMtcp1]*/	/*[/TAG-setMtcp1]*/

		$this->_mtcp = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMtcp2]*/	/*[/TAG-setMtcp2]*/

	}



	public function setMtlp($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMtlp1]*/	/*[/TAG-setMtlp1]*/

		$this->_mtlp = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMtlp2]*/	/*[/TAG-setMtlp2]*/

	}



	public function setDommage($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDommage1]*/	/*[/TAG-setDommage1]*/

		$this->_dommage = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDommage2]*/	/*[/TAG-setDommage2]*/

	}



	public function setMsvg($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMsvg1]*/	/*[/TAG-setMsvg1]*/

		$this->_msvg = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMsvg2]*/	/*[/TAG-setMsvg2]*/

	}



	public function setGabarit($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setGabarit1]*/	/*[/TAG-setGabarit1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_gabarit = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setGabarit2]*/	/*[/TAG-setGabarit2]*/

	}

	protected function setGabaritObject() {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setGabaritObject1]*/	/*[/TAG-setGabaritObject1]*/

		if ($this->_gabarit > 0) {
			$this->_oGabarit = FactoryGabarit::getFromTableGabarit($this->_gabarit);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setGabaritObject2]*/	/*[/TAG-setGabaritObject2]*/

	}



	public function setType($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setType1]*/	/*[/TAG-setType1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_type = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setType2]*/	/*[/TAG-setType2]*/

	}

	protected function setTypeObject() {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTypeObject1]*/	/*[/TAG-setTypeObject1]*/

		if ($this->_type > 0) {
			$this->_oType = FactoryType::getFromTableType($this->_type);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTypeObject2]*/	/*[/TAG-setTypeObject2]*/

	}



	public function setFo($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setFo1]*/	/*[/TAG-setFo1]*/

		$this->_fo = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setFo2]*/	/*[/TAG-setFo2]*/

	}



	public function setSauvegarde($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setSauvegarde1]*/	/*[/TAG-setSauvegarde1]*/

		$this->_sauvegarde = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setSauvegarde2]*/	/*[/TAG-setSauvegarde2]*/

	}



	public function setMmvt($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMmvt1]*/	/*[/TAG-setMmvt1]*/

		$this->_mmvt = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMmvt2]*/	/*[/TAG-setMmvt2]*/

	}



	public function setEncombrement($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setEncombrement1]*/	/*[/TAG-setEncombrement1]*/

		$this->_encombrement = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setEncombrement2]*/	/*[/TAG-setEncombrement2]*/

	}



	public function setDeux_mains($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDeux_mains1]*/	/*[/TAG-setDeux_mains1]*/

		$this->_deux_mains = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDeux_mains2]*/	/*[/TAG-setDeux_mains2]*/

	}



	public function setCout($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCout1]*/	/*[/TAG-setCout1]*/

		$this->_cout = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCout2]*/	/*[/TAG-setCout2]*/

	}



	public function setDate_creation($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDate_creation1]*/	/*[/TAG-setDate_creation1]*/

		$this->_date_creation = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDate_creation2]*/	/*[/TAG-setDate_creation2]*/

	}



	public function setChemin($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setChemin1]*/	/*[/TAG-setChemin1]*/

		$this->_chemin = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setChemin2]*/	/*[/TAG-setChemin2]*/

	}



	public function setTile($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTile1]*/	/*[/TAG-setTile1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_tile = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTile2]*/	/*[/TAG-setTile2]*/

	}

	protected function setTileObject() {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTileObject1]*/	/*[/TAG-setTileObject1]*/

		if ($this->_tile > 0) {
			$this->_oTile = FactoryTile::getFromTableTile($this->_tile);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTileObject2]*/	/*[/TAG-setTileObject2]*/

	}



	public function setUsure($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setUsure1]*/	/*[/TAG-setUsure1]*/

		$this->_usure = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setUsure2]*/	/*[/TAG-setUsure2]*/

	}



	public function setDemontable($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDemontable1]*/	/*[/TAG-setDemontable1]*/

		$this->_demontable = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDemontable2]*/	/*[/TAG-setDemontable2]*/

	}



	public function setDate_fin_reparation($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDate_fin_reparation1]*/	/*[/TAG-setDate_fin_reparation1]*/

		$this->_date_fin_reparation = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDate_fin_reparation2]*/	/*[/TAG-setDate_fin_reparation2]*/

	}



	public function setIngame($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 03/04/2017 15:27:38

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setIngame1]*/	/*[/TAG-setIngame1]*/

		$this->_ingame = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setIngame2]*/	/*[/TAG-setIngame2]*/

	}




	public function getId() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_id;
	}



	public function getNom() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_nom;
	}



	public function getDescription() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_description;
	}



	public function getCategorie() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_categorie;
	}

	public function getCategorieObject() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		if (empty($this->_oCategorie)) {
			$this->setCategorieObject();
		}
		if ((empty($this->_oCategorie) || is_null($this->_oCategorie))&& $this->_categorie > 0) {
			$this->setCategorieObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getCategorieObject1]*/	/*[/TAG-getCategorieObject1]*/

		return $this->_oCategorie;
	}



	public function getCp() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_cp;
	}



	public function getLp() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_lp;
	}



	public function getMtcp() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_mtcp;
	}



	public function getMtlp() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_mtlp;
	}



	public function getDommage() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_dommage;
	}



	public function getMsvg() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_msvg;
	}



	public function getGabarit() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_gabarit;
	}

	public function getGabaritObject() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		if (empty($this->_oGabarit)) {
			$this->setGabaritObject();
		}
		if ((empty($this->_oGabarit) || is_null($this->_oGabarit))&& $this->_gabarit > 0) {
			$this->setGabaritObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getGabaritObject1]*/	/*[/TAG-getGabaritObject1]*/

		return $this->_oGabarit;
	}



	public function getType() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_type;
	}

	public function getTypeObject() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		if (empty($this->_oType)) {
			$this->setTypeObject();
		}
		if ((empty($this->_oType) || is_null($this->_oType))&& $this->_type > 0) {
			$this->setTypeObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getTypeObject1]*/	/*[/TAG-getTypeObject1]*/

		return $this->_oType;
	}



	public function getFo() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_fo;
	}



	public function getSauvegarde() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_sauvegarde;
	}



	public function getMmvt() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_mmvt;
	}



	public function getEncombrement() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_encombrement;
	}



	public function getDeux_mains() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_deux_mains;
	}



	public function getCout() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_cout;
	}



	public function getDate_creation() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_date_creation;
	}



	public function getChemin() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_chemin;
	}



	public function getTile() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_tile;
	}

	public function getTileObject() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		if (empty($this->_oTile)) {
			$this->setTileObject();
		}
		if ((empty($this->_oTile) || is_null($this->_oTile))&& $this->_tile > 0) {
			$this->setTileObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getTileObject1]*/	/*[/TAG-getTileObject1]*/

		return $this->_oTile;
	}



	public function getUsure() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_usure;
	}



	public function getDemontable() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_demontable;
	}



	public function getDate_fin_reparation() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_date_fin_reparation;
	}



	public function getIngame() {
		//Generated by ObjectGenerator::generateGet() on 03/04/2017 15:27:38
		return $this->_ingame;
	}



	public function __toString() {
		//Generated by ObjectGenerator::generateToString() on 03/04/2017 15:27:38
		$chaine = 'Objet '.get_class($this).':<br/>';
		$chaine .= 'Le champ id vaut '.$this->getId().'<br/>';
		$chaine .= 'Le champ nom vaut '.$this->getNom().'<br/>';
		$chaine .= 'Le champ description vaut '.$this->getDescription().'<br/>';
		$chaine .= 'Le champ categorie vaut '.$this->getCategorie().'<br/>';
		$chaine .= 'Le champ cp vaut '.$this->getCp().'<br/>';
		$chaine .= 'Le champ lp vaut '.$this->getLp().'<br/>';
		$chaine .= 'Le champ mtcp vaut '.$this->getMtcp().'<br/>';
		$chaine .= 'Le champ mtlp vaut '.$this->getMtlp().'<br/>';
		$chaine .= 'Le champ dommage vaut '.$this->getDommage().'<br/>';
		$chaine .= 'Le champ msvg vaut '.$this->getMsvg().'<br/>';
		$chaine .= 'Le champ gabarit vaut '.$this->getGabarit().'<br/>';
		$chaine .= 'Le champ type vaut '.$this->getType().'<br/>';
		$chaine .= 'Le champ fo vaut '.$this->getFo().'<br/>';
		$chaine .= 'Le champ sauvegarde vaut '.$this->getSauvegarde().'<br/>';
		$chaine .= 'Le champ mmvt vaut '.$this->getMmvt().'<br/>';
		$chaine .= 'Le champ encombrement vaut '.$this->getEncombrement().'<br/>';
		$chaine .= 'Le champ deux_mains vaut '.$this->getDeux_mains().'<br/>';
		$chaine .= 'Le champ cout vaut '.$this->getCout().'<br/>';
		$chaine .= 'Le champ date_creation vaut '.$this->getDate_creation().'<br/>';
		$chaine .= 'Le champ chemin vaut '.$this->getChemin().'<br/>';
		$chaine .= 'Le champ tile vaut '.$this->getTile().'<br/>';
		$chaine .= 'Le champ usure vaut '.$this->getUsure().'<br/>';
		$chaine .= 'Le champ demontable vaut '.$this->getDemontable().'<br/>';
		$chaine .= 'Le champ date_fin_reparation vaut '.$this->getDate_fin_reparation().'<br/>';
		$chaine .= 'Le champ ingame vaut '.$this->getIngame().'<br/>';

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__toString1]*/	/*[/TAG-__toString1]*/

		return $chaine;
	}

	public function save() {
		//Generated by ObjectGenerator::generateSave() on 03/04/2017 15:27:38
		if ($this->getId() > 0) {
			/* un identifiant superieur a 0 implique un ancien objet => UPDATE */
			$this->update();
		} else {
			$requete = 'INSERT INTO equipement (id,nom,description,categorie,cp,lp,mtcp,mtlp,dommage,msvg,gabarit,type,fo,sauvegarde,mmvt,encombrement,deux_mains,cout,date_creation,chemin,tile,usure,demontable,date_fin_reparation,ingame)';
			$requete .= ' VALUES ';
			$requete .= '(';
			$requete .= '\'\','; //valeur forcee pour l'insertion
			$requete .= '\''.$this->getNom().'\',';
			$requete .= '\''.$this->getDescription().'\',';
			$requete .= $this->getCategorie().',';
			$requete .= '\''.$this->getCp().'\',';
			$requete .= '\''.$this->getLp().'\',';
			$requete .= '\''.$this->getMtcp().'\',';
			$requete .= '\''.$this->getMtlp().'\',';
			$requete .= '\''.$this->getDommage().'\',';
			$requete .= '\''.$this->getMsvg().'\',';
			$requete .= $this->getGabarit().',';
			$requete .= $this->getType().',';
			$requete .= $this->getFo().',';
			$requete .= $this->getSauvegarde().',';
			$requete .= '\''.$this->getMmvt().'\',';
			$requete .= $this->getEncombrement().',';
			$requete .= $this->getDeux_mains().',';
			$requete .= $this->getCout().',';
			$laDate = $this->getDate_creation();
			if (strlen($laDate) > 0) {
				$requete .= '\''.$laDate.'\',';
			} else {
				$requete .= 'NOW(),';
			}
			$requete .= '\''.$this->getChemin().'\',';
			$requete .= $this->getTile().',';
			$requete .= $this->getUsure().',';
			$requete .= $this->getDemontable().',';
			$laDate = $this->getDate_fin_reparation();
			if (strlen($laDate) > 0) {
				$requete .= '\''.$laDate.'\',';
			} else {
				$requete .= 'NOW(),';
			}
			$requete .= $this->getIngame().',';
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ')';
			return $requete;
		}
	}

	public function update() {
		//Generated by ObjectGenerator::generateUpdate() on 03/04/2017 15:27:38
		if ($this->getId() == 0 || $this->getId() == null) {
			/* un identifiant 0 ou null implique un nouvel objet => INSERT */
			$this->save();
		} else {
			$requete = 'UPDATE equipement SET ';
			$requete .= 'nom = \''.$this->getNom().'\',';
			$requete .= 'description = \''.$this->getDescription().'\',';
			$requete .= 'categorie = '.$this->getCategorie().',';
			$requete .= 'cp = \''.$this->getCp().'\',';
			$requete .= 'lp = \''.$this->getLp().'\',';
			$requete .= 'mtcp = \''.$this->getMtcp().'\',';
			$requete .= 'mtlp = \''.$this->getMtlp().'\',';
			$requete .= 'dommage = \''.$this->getDommage().'\',';
			$requete .= 'msvg = \''.$this->getMsvg().'\',';
			$requete .= 'gabarit = '.$this->getGabarit().',';
			$requete .= 'type = '.$this->getType().',';
			$requete .= 'fo = '.$this->getFo().',';
			$requete .= 'sauvegarde = '.$this->getSauvegarde().',';
			$requete .= 'mmvt = \''.$this->getMmvt().'\',';
			$requete .= 'encombrement = '.$this->getEncombrement().',';
			$requete .= 'deux_mains = '.$this->getDeux_mains().',';
			$requete .= 'cout = '.$this->getCout().',';
			$laDate = $this->getDate_creation();
			if (strlen($laDate) > 0) {
				$requete .= 'date_creation = \''.$laDate.'\',';
			} else {
				$requete .= 'date_creation = NOW(),';
			}
			$requete .= 'chemin = \''.$this->getChemin().'\',';
			$requete .= 'tile = '.$this->getTile().',';
			$requete .= 'usure = '.$this->getUsure().',';
			$requete .= 'demontable = '.$this->getDemontable().',';
			$laDate = $this->getDate_fin_reparation();
			if (strlen($laDate) > 0) {
				$requete .= 'date_fin_reparation = \''.$laDate.'\',';
			} else {
				$requete .= 'date_fin_reparation = NOW(),';
			}
			$requete .= 'ingame = '.$this->getIngame().',';
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ' WHERE id = '.$this->getId();
			return $requete;
		}
	}

	public function delete() {
		//Generated by ObjectGenerator::generateDelete() on 03/04/2017 15:27:38
		if ($this->getId() == 0 || $this->getId() == null) {
			/* ERREUR A FAIRE SORTIR */
			/* TODO */
		} else {
			return 'DELETE FROM equipement WHERE id = '.$this->getId();
		}
	}

	public function getParent() {
		//Generated by ObjectGenerator::generateGetParent() on 03/04/2017 15:27:38
		return ('parent::__construct($id,$nom,$description,$categorie,$cp,$lp,$mtcp,$mtlp,$dommage,$msvg,$gabarit,$type,$fo,$sauvegarde,$mmvt,$encombrement,$deux_mains,$cout,$date_creation,$chemin,$tile,$usure,$demontable,$date_fin_reparation,$ingame);');
	}

	public function getAttributes() {
		//Generated by ObjectGenerator::generateGetAttributes() on 03/04/2017 15:27:38
		$result = array();
		$result2 = array();
		$reflection = new ReflectionClass($this);
		$result = $reflection->getdefaultProperties();
		$result = array_keys($result);
		foreach ($result AS $data) {
			$result2[] = substr($data,1);
		}
		return $result2;
	}

	public function compareTo($object) {
		//Generated by ObjectGenerator::generateCompareTo() on 03/04/2017 15:27:38
		$data = array();
		if ($object instanceof Equipement) {
			if ($this->_id != $object->getId()) {
				$data['id'] = $object->getId();
			}
			if ($this->_nom != $object->getNom()) {
				$data['nom'] = $object->getNom();
			}
			if ($this->_description != $object->getDescription()) {
				$data['description'] = $object->getDescription();
			}
			if ($this->_categorie != $object->getCategorie()) {
				$data['categorie'] = $object->getCategorie();
			}
			if ($this->_cp != $object->getCp()) {
				$data['cp'] = $object->getCp();
			}
			if ($this->_lp != $object->getLp()) {
				$data['lp'] = $object->getLp();
			}
			if ($this->_mtcp != $object->getMtcp()) {
				$data['mtcp'] = $object->getMtcp();
			}
			if ($this->_mtlp != $object->getMtlp()) {
				$data['mtlp'] = $object->getMtlp();
			}
			if ($this->_dommage != $object->getDommage()) {
				$data['dommage'] = $object->getDommage();
			}
			if ($this->_msvg != $object->getMsvg()) {
				$data['msvg'] = $object->getMsvg();
			}
			if ($this->_gabarit != $object->getGabarit()) {
				$data['gabarit'] = $object->getGabarit();
			}
			if ($this->_type != $object->getType()) {
				$data['type'] = $object->getType();
			}
			if ($this->_fo != $object->getFo()) {
				$data['fo'] = $object->getFo();
			}
			if ($this->_sauvegarde != $object->getSauvegarde()) {
				$data['sauvegarde'] = $object->getSauvegarde();
			}
			if ($this->_mmvt != $object->getMmvt()) {
				$data['mmvt'] = $object->getMmvt();
			}
			if ($this->_encombrement != $object->getEncombrement()) {
				$data['encombrement'] = $object->getEncombrement();
			}
			if ($this->_deux_mains != $object->getDeux_mains()) {
				$data['deux_mains'] = $object->getDeux_mains();
			}
			if ($this->_cout != $object->getCout()) {
				$data['cout'] = $object->getCout();
			}
			if ($this->_date_creation != $object->getDate_creation()) {
				$data['date_creation'] = $object->getDate_creation();
			}
			if ($this->_chemin != $object->getChemin()) {
				$data['chemin'] = $object->getChemin();
			}
			if ($this->_tile != $object->getTile()) {
				$data['tile'] = $object->getTile();
			}
			if ($this->_usure != $object->getUsure()) {
				$data['usure'] = $object->getUsure();
			}
			if ($this->_demontable != $object->getDemontable()) {
				$data['demontable'] = $object->getDemontable();
			}
			if ($this->_date_fin_reparation != $object->getDate_fin_reparation()) {
				$data['date_fin_reparation'] = $object->getDate_fin_reparation();
			}
			if ($this->_ingame != $object->getIngame()) {
				$data['ingame'] = $object->getIngame();
			}
		}
		return $data;
	}

	public function encodeDecodeJSON($json_str='') {
		//Generated by ObjectGenerator::generateEncodeDecodeJSON() on 03/04/2017 15:27:38
		if ($json_str == '') {
			// Objet standard a remplir
			$json= new stdClass();
			foreach ($this as $key => $value) {
				if (substr($key,0,1) == '_') {
					$key = substr($key,1);
					//on evite de faire sortir les objet fonctionnels
					if (strtolower(substr($key,0,1)) != 'o') {
						$json->$key = $value;
					}
				}
				$json->$key = $value;
			}
			return json_encode($json);
		} else {
			/* decodage et hydratation des datas JSON */
			$json = json_decode($json_str, 1);
			foreach ($json as $key => $value) {
				$method = 'set'.ucfirst($key);
				//Si la methode existe alors on l'utilise
				if (method_exists($this, $method)) {
					$this->$method($value);
				}
			}
		}
	}

	public function getClass() {
		//Generated by ObjectGenerator::generateGetClass() on 03/04/2017 15:27:38
		return get_class($this);
	}

	public function getEmpty() {
		//Generated by ObjectGenerator::generateIsEmpty() on 03/04/2017 15:27:38
		return $this->_empty;
	}

	public function affiche() {
		//Generated by ObjectGenerator::generateAffiche() on 03/04/2017 15:27:38
		/* Chargement de Smarty */
		require_once(_SMARTY_LOAD_);
		$smarty->assign('equipement',$this);
		$smarty->assign('aListeMethodes',get_class_methods($this));
		$smarty->assign('urlVersMiniature',_URL_MINIATURES_.$this->getNom().'.jpg');
		/* Appel de l'affichage pour la classe en cour d'utilisation */
		$smarty->display(_TEMPLATES_BASE_.'classes/Equipement.tpl');
	}


	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Equipement21]*/
	
	public function getCategorieType() {
// 		if (isset($this->getCategorieObject())) {
			$this->setCategorieObject();
// 		}
		return $this->getCategorieObject()->getCategorieType();
	}
	
	public function getPorteTotale() {
		return array(min(explode('-',$this->getCp())),max(explode('-',$this->getLp())));
	}
	
	/**
	 * Methode de chargement des equipements porte par une Unite
	 */
	public function chargeCategorie() {
		$this->setCategorieObject();
	}
	
	/**
	 * Methode de chargement des equipements porte par une Unite
	 */
	public function chargeType() {
		$this->setTypeObject();
	}
	
	/**
	 * Methode de chargement des equipements porte par une Unite
	 */
	public function chargeTile() {
// 		if ($this->getTile() > 0) {
			$this->setTileObject();
// 		} else {
// 			$this->_oTile = ManagerTile::getInstance()->getCaseVide();
// 		}
	}
	
//montee dans le Manager
// 	public function attaque($uniteAttaquee=null) {
// 		$oMaCase = FactoryTile::getFromExtTableUnite($this->getId());
// 		$oAttaque = new Actionattaque($this->getCategorie()->getNom());
// 		$rayon = $this->getPorteTotale();

// 		if (is_null($uniteAttaquee)) {
// 			// la liste des cases dans le rayon de l'arme
// 			$xMin = $oMaCase->getX() - intval(max($rayon));
// 			if ($xMin < 0) {
// 				$xMin = 0;
// 			}
// 			$xMax = $oMaCase->getX() + intval(max($rayon));
// 			$yMin = $oMaCase->getY() - intval(max($rayon));
// 			if ($yMin < 0) {
// 				$yMin = 0;
// 			}
// 			$yMax = $oMaCase->getY() + intval(max($rayon));
	
// 			$listeCasesAAttaquer = FactoryTile::getBusyCasesCarteFromRange($oMaCase->getIdcarte(),$xMin,$xMax,$yMin,$yMax);
	
// 			//Maintenant il faut parcourir la liste des unites presentes et lancer les attaques
// 			foreach ($listeCasesAAttaquer AS $oCase) {
// 				// 				debug($oCase->compareTo($oMaCase));
// 				$resultCompare = $oCase->compareTo($oMaCase);
// 				if (!empty($resultCompare)) {
// 					if (!empty($oAttaque)) {
// 						debug("attaque avec equipement");
// 						$oAttaque->attaque($this,$oCase->getUnite());
// 					}
// 				}
// 			}
// 		} else {
// 			//au contact ???
// 			debug("attaque avec equipement au contact");
// 			$oAttaque->attaque($this,$uniteAttaquee);
// 		}
// 	}
	
	/*[/TAG-Equipement21]*/

}
?>