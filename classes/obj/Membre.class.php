<?php
		//Generated by ObjectGenerator::generate()
class Membre {
	protected $_id; /* int(11) unsigned */
	protected $_pseudo; /* varchar(50) */
	protected $_password; /* varchar(40) */
	protected $_mail; /* varchar(50) */
	protected $_date_inscription; /* datetime */
	protected $_staff; /* enum('0','1') */

	/* identifiant composite Groupe */
	protected $_groupe; /* int(11) unsigned */
	/* liste des objets Groupe */
	protected $_oGroupe; /* groupe Object*/

	protected $_experience; /* int(10) unsigned */
	protected $_description; /* text */
	protected $_cle_activation; /* varchar(40) */
	protected $_avatar; /* tinyint(1) */

	/* identifiant composite Design */
	protected $_design; /* bigint(20) */
	/* liste des objets Design */
	protected $_oDesign; /* design Object*/

	protected $_points; /* int(5) unsigned */
	protected $_date_der_connexion; /* datetime */
	protected $_empty = true; // permet de savoir si l'objet est vide

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Membre11]*/	/*[/TAG-Membre11]*/


	public function __construct($id=0,$pseudo='',$password='',$mail='',$date_inscription='',$staff='',$groupe=0,$experience=0,$description='',$cle_activation='',$avatar=0,$design=0,$points=0,$date_der_connexion='') {
		//Generated by ObjectGenerator::generateConstruct()
		$this->_id = $id;
		$this->_pseudo = $pseudo;
		$this->_password = $password;
		$this->_mail = $mail;
		$this->_date_inscription = $date_inscription;
		$this->_staff = $staff;
		$this->_groupe = $groupe;
		$this->_experience = $experience;
		$this->_description = $description;
		$this->_cle_activation = $cle_activation;
		$this->_avatar = $avatar;
		$this->_design = $design;
		$this->_points = $points;
		$this->_date_der_connexion = $date_der_connexion;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__construct1]*/	/*[/TAG-__construct1]*/


	}


	public function __clone() {
		//Generated by ObjectGenerator::generateClone()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__clone1]*/	/*[/TAG-__clone1]*/

		//Sur le clonage d'un objet on supprime l'identifiant
		$this->_description .= ' / Clone '.__CLASS__.' ID '.$this->_id;
		$this->_id = 0;
	}


	public function setId($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setId1]*/	/*[/TAG-setId1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if (!$this->getEmpty()) {
		return;
		}
		$this->_id = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setId2]*/	/*[/TAG-setId2]*/

	}



	public function setPseudo($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setPseudo1]*/	/*[/TAG-setPseudo1]*/

		$this->_pseudo = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setPseudo2]*/	/*[/TAG-setPseudo2]*/

	}



	public function setPassword($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setPassword1]*/	/*[/TAG-setPassword1]*/

		$this->_password = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setPassword2]*/	/*[/TAG-setPassword2]*/

	}



	public function setMail($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMail1]*/	/*[/TAG-setMail1]*/

		$this->_mail = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMail2]*/	/*[/TAG-setMail2]*/

	}



	public function setDate_inscription($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDate_inscription1]*/	/*[/TAG-setDate_inscription1]*/

		$this->_date_inscription = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDate_inscription2]*/	/*[/TAG-setDate_inscription2]*/

	}



	public function setStaff($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setStaff1]*/	/*[/TAG-setStaff1]*/

		$this->_staff = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setStaff2]*/	/*[/TAG-setStaff2]*/

	}



	public function setGroupe($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setGroupe1]*/	/*[/TAG-setGroupe1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_groupe = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setGroupe2]*/	/*[/TAG-setGroupe2]*/

	}

	protected function setGroupeObject() {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setGroupeObject1]*/	/*[/TAG-setGroupeObject1]*/

		if ($this->_groupe > 0) {
			$this->_oGroupe = FactoryGroupe::getFromTableGroupe($this->_groupe);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setGroupeObject2]*/	/*[/TAG-setGroupeObject2]*/

	}



	public function setExperience($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setExperience1]*/	/*[/TAG-setExperience1]*/

		$this->_experience = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setExperience2]*/	/*[/TAG-setExperience2]*/

	}



	public function setDescription($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDescription1]*/	/*[/TAG-setDescription1]*/

		$this->_description = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDescription2]*/	/*[/TAG-setDescription2]*/

	}



	public function setCle_activation($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCle_activation1]*/	/*[/TAG-setCle_activation1]*/

		$this->_cle_activation = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCle_activation2]*/	/*[/TAG-setCle_activation2]*/

	}



	public function setAvatar($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setAvatar1]*/	/*[/TAG-setAvatar1]*/

		$this->_avatar = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setAvatar2]*/	/*[/TAG-setAvatar2]*/

	}



	public function setDesign($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDesign1]*/	/*[/TAG-setDesign1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_design = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDesign2]*/	/*[/TAG-setDesign2]*/

	}

	protected function setDesignObject() {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDesignObject1]*/	/*[/TAG-setDesignObject1]*/

		if ($this->_design > 0) {
			$this->_oDesign = FactoryDesign::getFromTableDesign($this->_design);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDesignObject2]*/	/*[/TAG-setDesignObject2]*/

	}



	public function setPoints($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setPoints1]*/	/*[/TAG-setPoints1]*/

		$this->_points = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setPoints2]*/	/*[/TAG-setPoints2]*/

	}



	public function setDate_der_connexion($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDate_der_connexion1]*/	/*[/TAG-setDate_der_connexion1]*/

		$this->_date_der_connexion = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDate_der_connexion2]*/	/*[/TAG-setDate_der_connexion2]*/

	}




	public function getId() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_id;
	}



	public function getPseudo() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_pseudo;
	}



	public function getPassword() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_password;
	}



	public function getMail() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_mail;
	}



	public function getDate_inscription() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_date_inscription;
	}



	public function getStaff() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_staff;
	}



	public function getGroupe() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_groupe;
	}

	public function getGroupeObject() {
		//Generated by ObjectGenerator::generateGet()
		if (empty($this->_oGroupe)) {
			$this->setGroupeObject();
		}
		if ((empty($this->_oGroupe) || is_null($this->_oGroupe))&& $this->_groupe > 0) {
			$this->setGroupeObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getGroupeObject1]*/	/*[/TAG-getGroupeObject1]*/

		return $this->_oGroupe;
	}



	public function getExperience() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_experience;
	}



	public function getDescription() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_description;
	}



	public function getCle_activation() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_cle_activation;
	}



	public function getAvatar() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_avatar;
	}



	public function getDesign() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_design;
	}

	public function getDesignObject() {
		//Generated by ObjectGenerator::generateGet()
		if (empty($this->_oDesign)) {
			$this->setDesignObject();
		}
		if ((empty($this->_oDesign) || is_null($this->_oDesign))&& $this->_design > 0) {
			$this->setDesignObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getDesignObject1]*/	/*[/TAG-getDesignObject1]*/

		return $this->_oDesign;
	}



	public function getPoints() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_points;
	}



	public function getDate_der_connexion() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_date_der_connexion;
	}



	public function __toString() {
		//Generated by ObjectGenerator::generateToString()
		$chaine = 'Objet '.get_class($this).':<br/>';
		$chaine .= 'Le champ id vaut '.$this->getId().'<br/>';
		$chaine .= 'Le champ pseudo vaut '.$this->getPseudo().'<br/>';
		$chaine .= 'Le champ password vaut '.$this->getPassword().'<br/>';
		$chaine .= 'Le champ mail vaut '.$this->getMail().'<br/>';
		$chaine .= 'Le champ date_inscription vaut '.$this->getDate_inscription().'<br/>';
		$chaine .= 'Le champ staff vaut '.$this->getStaff().'<br/>';
		$chaine .= 'Le champ groupe vaut '.$this->getGroupe().'<br/>';
		$chaine .= 'Le champ experience vaut '.$this->getExperience().'<br/>';
		$chaine .= 'Le champ description vaut '.$this->getDescription().'<br/>';
		$chaine .= 'Le champ cle_activation vaut '.$this->getCle_activation().'<br/>';
		$chaine .= 'Le champ avatar vaut '.$this->getAvatar().'<br/>';
		$chaine .= 'Le champ design vaut '.$this->getDesign().'<br/>';
		$chaine .= 'Le champ points vaut '.$this->getPoints().'<br/>';
		$chaine .= 'Le champ date_der_connexion vaut '.$this->getDate_der_connexion().'<br/>';

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__toString1]*/	/*[/TAG-__toString1]*/

		return $chaine;
	}

	public function save() {
		//Generated by ObjectGenerator::generateSave()
		if ($this->getId() > 0) {
			/* un identifiant superieur a 0 implique un ancien objet => UPDATE */
			$this->update();
		} else {
			$requete = 'INSERT INTO membre (id,pseudo,password,mail,date_inscription,staff,groupe,experience,description,cle_activation,avatar,design,points,date_der_connexion)';
			$requete .= ' VALUES ';
			$requete .= '(';
			$requete .= '\'\','; //valeur forcee pour l'insertion
			$requete .= '\''.$this->getPseudo().'\',';
			$requete .= '\''.$this->getPassword().'\',';
			$requete .= '\''.$this->getMail().'\',';
			$laDate = $this->getDate_inscription();
			if (strlen($laDate) > 0) {
				$requete .= '\''.$laDate.'\',';
			} else {
				$requete .= 'NOW(),';
			}
			$requete .= '\''.$this->getStaff().'\',';
			$requete .= $this->getGroupe().',';
			$requete .= $this->getExperience().',';
			$requete .= '\''.$this->getDescription().'\',';
			$requete .= '\''.$this->getCle_activation().'\',';
			$requete .= $this->getAvatar().',';
			$requete .= $this->getDesign().',';
			$requete .= $this->getPoints().',';
			$laDate = $this->getDate_der_connexion();
			if (strlen($laDate) > 0) {
				$requete .= '\''.$laDate.'\',';
			} else {
				$requete .= 'NOW(),';
			}
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ')';
			return $requete;
		}
	}

	public function update() {
		//Generated by ObjectGenerator::generateUpdate()
		if ($this->getId() == 0 || $this->getId() == null) {
			/* un identifiant 0 ou null implique un nouvel objet => INSERT */
			$this->save();
		} else {
			$requete = 'UPDATE membre SET ';
			$requete .= 'pseudo = \''.$this->getPseudo().'\',';
			$requete .= 'password = \''.$this->getPassword().'\',';
			$requete .= 'mail = \''.$this->getMail().'\',';
			$laDate = $this->getDate_inscription();
			if (strlen($laDate) > 0) {
				$requete .= 'date_inscription = \''.$laDate.'\',';
			} else {
				$requete .= 'date_inscription = NOW(),';
			}
			$requete .= 'staff = \''.$this->getStaff().'\',';
			$requete .= 'groupe = '.$this->getGroupe().',';
			$requete .= 'experience = '.$this->getExperience().',';
			$requete .= 'description = \''.$this->getDescription().'\',';
			$requete .= 'cle_activation = \''.$this->getCle_activation().'\',';
			$requete .= 'avatar = '.$this->getAvatar().',';
			$requete .= 'design = '.$this->getDesign().',';
			$requete .= 'points = '.$this->getPoints().',';
			$laDate = $this->getDate_der_connexion();
			if (strlen($laDate) > 0) {
				$requete .= 'date_der_connexion = \''.$laDate.'\',';
			} else {
				$requete .= 'date_der_connexion = NOW(),';
			}
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ' WHERE id = '.$this->getId();
			return $requete;
		}
	}

	public function delete() {
		//Generated by ObjectGenerator::generateDelete()
		if ($this->getId() == 0 || $this->getId() == null) {
			/* ERREUR A FAIRE SORTIR */
			/* TODO */
		} else {
			return 'DELETE FROM membre WHERE id = '.$this->getId();
		}
	}

	public function getParent() {
		//Generated by ObjectGenerator::generateGetParent()
		return ('parent::__construct($id,$pseudo,$password,$mail,$date_inscription,$staff,$groupe,$experience,$description,$cle_activation,$avatar,$design,$points,$date_der_connexion);');
	}

	public function getAttributes() {
		//Generated by ObjectGenerator::generateGetAttributes()
		$result = array();
		$result2 = array();
		$reflection = new ReflectionClass($this);
		$result = $reflection->getdefaultProperties();
		$result = array_keys($result);
		foreach ($result AS $data) {
			$result2[] = substr($data,1);
		}
		return $result2;
	}

	public function compareTo($object) {
		//Generated by ObjectGenerator::generateCompareTo()
		$data = array();
		if ($object instanceof Membre) {
			if ($this->_id != $object->getId()) {
				$data['id'] = $object->getId();
			}
			if ($this->_pseudo != $object->getPseudo()) {
				$data['pseudo'] = $object->getPseudo();
			}
			if ($this->_password != $object->getPassword()) {
				$data['password'] = $object->getPassword();
			}
			if ($this->_mail != $object->getMail()) {
				$data['mail'] = $object->getMail();
			}
			if ($this->_date_inscription != $object->getDate_inscription()) {
				$data['date_inscription'] = $object->getDate_inscription();
			}
			if ($this->_staff != $object->getStaff()) {
				$data['staff'] = $object->getStaff();
			}
			if ($this->_groupe != $object->getGroupe()) {
				$data['groupe'] = $object->getGroupe();
			}
			if ($this->_experience != $object->getExperience()) {
				$data['experience'] = $object->getExperience();
			}
			if ($this->_description != $object->getDescription()) {
				$data['description'] = $object->getDescription();
			}
			if ($this->_cle_activation != $object->getCle_activation()) {
				$data['cle_activation'] = $object->getCle_activation();
			}
			if ($this->_avatar != $object->getAvatar()) {
				$data['avatar'] = $object->getAvatar();
			}
			if ($this->_design != $object->getDesign()) {
				$data['design'] = $object->getDesign();
			}
			if ($this->_points != $object->getPoints()) {
				$data['points'] = $object->getPoints();
			}
			if ($this->_date_der_connexion != $object->getDate_der_connexion()) {
				$data['date_der_connexion'] = $object->getDate_der_connexion();
			}
		}
		return $data;
	}

	public function encodeDecodeJSON($json_str='') {
		//Generated by ObjectGenerator::generateEncodeDecodeJSON()
		if ($json_str == '') {
			// Objet standard a remplir
			$json= new stdClass();
			foreach ($this as $key => $value) {
				if (substr($key,0,1) == '_') {
					$key = substr($key,1);
					//on evite de faire sortir les objet fonctionnels
					if (strtolower(substr($key,0,1)) != 'o') {
						$json->$key = $value;
					}
				}
				$json->$key = $value;
			}
			return json_encode($json);
		} else {
			/* decodage et hydratation des datas JSON */
			$json = json_decode($json_str, 1);
			foreach ($json as $key => $value) {
				$method = 'set'.ucfirst($key);
				//Si la methode existe alors on l'utilise
				if (method_exists($this, $method)) {
					$this->$method($value);
				}
			}
		}
	}

	public function getClass() {
		//Generated by ObjectGenerator::generateGetClass()
		return get_class($this);
	}

	public function getEmpty() {
		//Generated by ObjectGenerator::generateIsEmpty()
		return $this->_empty;
	}

	public function affiche() {
		//Generated by ObjectGenerator::generateAffiche()
		/* Chargement de Smarty */
		require_once(_SMARTY_LOAD_);
		$smarty->assign('membre',$this);
		$smarty->assign('aListeMethodes',get_class_methods($this));
		$smarty->assign('urlVersMiniature',_URL_MINIATURES_.$this->getNom().'.jpg');
		/* Appel de l'affichage pour la classe en cour d'utilisation */
		$smarty->display(_TEMPLATES_BASE_.'classes/Membre.tpl');
	}


	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Membre21]*/	/*[/TAG-Membre21]*/

}
?>