<?php
		//Generated by ObjectGenerator::generate()
class Hero {
	protected $_id; /* int(11) unsigned */

	/* identifiant composite Membre */
	protected $_membre; /* int(11) unsigned */
	/* liste des objets Membre */
	protected $_oMembre; /* membre Object*/

	protected $_nom; /* varchar(50) */
	protected $_description; /* text */
	protected $_experience; /* smallint(5) unsigned */

	/* identifiant composite Camp */
	protected $_camp; /* bigint(20) unsigned */
	/* liste des objets Camp */
	protected $_oCamp; /* camp Object*/


	/* identifiant composite Unite_joueur */
	protected $_unite_joueur; /* bigint(20) unsigned */
	/* liste des objets Unite_joueur */
	protected $_oUnite_joueur; /* unite_joueur Object*/

	protected $_empty = true; // permet de savoir si l'objet est vide

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Hero11]*/	/*[/TAG-Hero11]*/


	public function __construct($id=0,$membre=0,$nom='',$description='',$experience=0,$camp=0,$unite_joueur=0) {
		//Generated by ObjectGenerator::generateConstruct()
		$this->_id = $id;
		$this->_membre = $membre;
		$this->_nom = $nom;
		$this->_description = $description;
		$this->_experience = $experience;
		$this->_camp = $camp;
		$this->_unite_joueur = $unite_joueur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__construct1]*/	/*[/TAG-__construct1]*/


	}


	public function __clone() {
		//Generated by ObjectGenerator::generateClone()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__clone1]*/	/*[/TAG-__clone1]*/

		//Sur le clonage d'un objet on supprime l'identifiant
		$this->_description .= ' / Clone '.__CLASS__.' ID '.$this->_id;
		$this->_id = 0;
	}


	public function setId($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setId1]*/	/*[/TAG-setId1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if (!$this->getEmpty()) {
		return;
		}
		$this->_id = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setId2]*/	/*[/TAG-setId2]*/

	}



	public function setMembre($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMembre1]*/	/*[/TAG-setMembre1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_membre = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMembre2]*/	/*[/TAG-setMembre2]*/

	}

	protected function setMembreObject() {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMembreObject1]*/	/*[/TAG-setMembreObject1]*/

		if ($this->_membre > 0) {
			$this->_oMembre = FactoryMembre::getFromTableMembre($this->_membre);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMembreObject2]*/	/*[/TAG-setMembreObject2]*/

	}



	public function setNom($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setNom1]*/	/*[/TAG-setNom1]*/

		$this->_nom = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setNom2]*/	/*[/TAG-setNom2]*/

	}



	public function setDescription($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDescription1]*/	/*[/TAG-setDescription1]*/

		$this->_description = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setDescription2]*/	/*[/TAG-setDescription2]*/

	}



	public function setExperience($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setExperience1]*/	/*[/TAG-setExperience1]*/

		$this->_experience = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setExperience2]*/	/*[/TAG-setExperience2]*/

	}



	public function setCamp($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCamp1]*/	/*[/TAG-setCamp1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_camp = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCamp2]*/	/*[/TAG-setCamp2]*/

	}

	protected function setCampObject() {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCampObject1]*/	/*[/TAG-setCampObject1]*/

		if ($this->_camp > 0) {
			$this->_oCamp = FactoryCamp::getFromTableCamp($this->_camp);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setCampObject2]*/	/*[/TAG-setCampObject2]*/

	}



	public function setUnite_joueur($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setUnite_joueur1]*/	/*[/TAG-setUnite_joueur1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_unite_joueur = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setUnite_joueur2]*/	/*[/TAG-setUnite_joueur2]*/

	}

	protected function setUnite_joueurObject() {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setUnite_joueurObject1]*/	/*[/TAG-setUnite_joueurObject1]*/

		if ($this->_unite_joueur > 0) {
			$this->_oUnite_joueur = FactoryUnite_joueur::getFromTableUnite_joueur($this->_unite_joueur);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setUnite_joueurObject2]*/	/*[/TAG-setUnite_joueurObject2]*/

	}




	public function getId() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_id;
	}



	public function getMembre() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_membre;
	}

	public function getMembreObject() {
		//Generated by ObjectGenerator::generateGet()
		if (empty($this->_oMembre)) {
			$this->setMembreObject();
		}
		if ((empty($this->_oMembre) || is_null($this->_oMembre))&& $this->_membre > 0) {
			$this->setMembreObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getMembreObject1]*/	/*[/TAG-getMembreObject1]*/

		return $this->_oMembre;
	}



	public function getNom() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_nom;
	}



	public function getDescription() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_description;
	}



	public function getExperience() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_experience;
	}



	public function getCamp() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_camp;
	}

	public function getCampObject() {
		//Generated by ObjectGenerator::generateGet()
		if (empty($this->_oCamp)) {
			$this->setCampObject();
		}
		if ((empty($this->_oCamp) || is_null($this->_oCamp))&& $this->_camp > 0) {
			$this->setCampObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getCampObject1]*/	/*[/TAG-getCampObject1]*/

		return $this->_oCamp;
	}



	public function getUnite_joueur() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_unite_joueur;
	}

	public function getUnite_joueurObject() {
		//Generated by ObjectGenerator::generateGet()
		if (empty($this->_oUnite_joueur)) {
			$this->setUnite_joueurObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getUnite_joueurObject1]*/	/*[/TAG-getUnite_joueurObject1]*/

			return $this->_oUnite_joueur;
	}



	public function __toString() {
		//Generated by ObjectGenerator::generateToString()
		$chaine = 'Objet '.get_class($this).':<br/>';
		$chaine .= 'Le champ id vaut '.$this->getId().'<br/>';
		$chaine .= 'Le champ membre vaut '.$this->getMembre().'<br/>';
		$chaine .= 'Le champ nom vaut '.$this->getNom().'<br/>';
		$chaine .= 'Le champ description vaut '.$this->getDescription().'<br/>';
		$chaine .= 'Le champ experience vaut '.$this->getExperience().'<br/>';
		$chaine .= 'Le champ camp vaut '.$this->getCamp().'<br/>';
		$chaine .= 'Le champ unite_joueur vaut '.$this->getUnite_joueur().'<br/>';

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__toString1]*/	/*[/TAG-__toString1]*/

		return $chaine;
	}

	public function save() {
		//Generated by ObjectGenerator::generateSave()
		if ($this->getId() > 0) {
			/* un identifiant superieur a 0 implique un ancien objet => UPDATE */
			$this->update();
		} else {
			$requete = 'INSERT INTO hero (id,membre,nom,description,experience,camp,unite_joueur)';
			$requete .= ' VALUES ';
			$requete .= '(';
			$requete .= '\'\','; //valeur forcee pour l'insertion
			$requete .= $this->getMembre().',';
			$requete .= '\''.$this->getNom().'\',';
			$requete .= '\''.$this->getDescription().'\',';
			$requete .= $this->getExperience().',';
			$requete .= $this->getCamp().',';
			$requete .= $this->getUnite_joueur().',';
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ')';
			return $requete;
		}
	}

	public function update() {
		//Generated by ObjectGenerator::generateUpdate()
		if ($this->getId() == 0 || $this->getId() == null) {
			/* un identifiant 0 ou null implique un nouvel objet => INSERT */
			$this->save();
		} else {
			$requete = 'UPDATE hero SET ';
			$requete .= 'membre = '.$this->getMembre().',';
			$requete .= 'nom = \''.$this->getNom().'\',';
			$requete .= 'description = \''.$this->getDescription().'\',';
			$requete .= 'experience = '.$this->getExperience().',';
			$requete .= 'camp = '.$this->getCamp().',';
			$requete .= 'unite_joueur = '.$this->getUnite_joueur().',';
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ' WHERE id = '.$this->getId();
			return $requete;
		}
	}

	public function delete() {
		//Generated by ObjectGenerator::generateDelete()
		if ($this->getId() == 0 || $this->getId() == null) {
			/* ERREUR A FAIRE SORTIR */
			/* TODO */
		} else {
			return 'DELETE FROM hero WHERE id = '.$this->getId();
		}
	}

	public function getParent() {
		//Generated by ObjectGenerator::generateGetParent()
		return ('parent::__construct($id,$membre,$nom,$description,$experience,$camp,$unite_joueur);');
	}

	public function getAttributes() {
		//Generated by ObjectGenerator::generateGetAttributes()
		$result = array();
		$result2 = array();
		$reflection = new ReflectionClass($this);
		$result = $reflection->getdefaultProperties();
		$result = array_keys($result);
		foreach ($result AS $data) {
			$result2[] = substr($data,1);
		}
		return $result2;
	}

	public function compareTo($object) {
		//Generated by ObjectGenerator::generateCompareTo()
		$data = array();
		if ($object instanceof Hero) {
			if ($this->_id != $object->getId()) {
				$data['id'] = $object->getId();
			}
			if ($this->_membre != $object->getMembre()) {
				$data['membre'] = $object->getMembre();
			}
			if ($this->_nom != $object->getNom()) {
				$data['nom'] = $object->getNom();
			}
			if ($this->_description != $object->getDescription()) {
				$data['description'] = $object->getDescription();
			}
			if ($this->_experience != $object->getExperience()) {
				$data['experience'] = $object->getExperience();
			}
			if ($this->_camp != $object->getCamp()) {
				$data['camp'] = $object->getCamp();
			}
			if ($this->_unite_joueur != $object->getUnite_joueur()) {
				$data['unite_joueur'] = $object->getUnite_joueur();
			}
		}
		return $data;
	}

	public function encodeDecodeJSON($json_str='') {
		//Generated by ObjectGenerator::generateEncodeDecodeJSON()
		if ($json_str == '') {
			// Objet standard a remplir
			$json= new stdClass();
			foreach ($this as $key => $value) {
				if (substr($key,0,1) == '_') {
					$key = substr($key,1);
					//on evite de faire sortir les objet fonctionnels
					if (strtolower(substr($key,0,1)) != 'o') {
						$json->$key = $value;
					}
				}
				$json->$key = $value;
			}
			return json_encode($json);
		} else {
			/* decodage et hydratation des datas JSON */
			$json = json_decode($json_str, 1);
			foreach ($json as $key => $value) {
				$method = 'set'.ucfirst($key);
				//Si la methode existe alors on l'utilise
				if (method_exists($this, $method)) {
					$this->$method($value);
				}
			}
		}
	}

	public function getClass() {
		//Generated by ObjectGenerator::generateGetClass()
		return get_class($this);
	}

	public function getEmpty() {
		//Generated by ObjectGenerator::generateIsEmpty()
		return $this->_empty;
	}

	public function affiche() {
		//Generated by ObjectGenerator::generateAffiche()
		/* Chargement de Smarty */
		require_once(_SMARTY_LOAD_);
		$smarty->assign('hero',$this);
		$smarty->assign('aListeMethodes',get_class_methods($this));
		$smarty->assign('urlVersMiniature',_URL_MINIATURES_.$this->getNom().'.jpg');
		/* Appel de l'affichage pour la classe en cour d'utilisation */
		$smarty->display(_TEMPLATES_BASE_.'classes/Hero.tpl');
	}


	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Hero21]*/	/*[/TAG-Hero21]*/

}
?>