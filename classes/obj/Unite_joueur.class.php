<?php
		//Generated by ObjectGenerator::generate() on 06/06/2017 11:24:56
class Unite_joueur extends Unite {

	/* identifiant composite Membre */
	protected $_membre; /* bigint(20) unsigned */
	/* liste des objets Membre */
	protected $_oMembre; /* membre Object*/

	protected $_empty = true; // permet de savoir si l'objet est vide

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Unite_joueur11]*/	/*[/TAG-Unite_joueur11]*/


	public function __construct($id=0,$membre=0,$nom='',$description='',$def_av=0,$def_ar=0,$def_g=0,$def_d=0,$mouvement=0,$experience=0,$equipementarmegauche=0,$equipementarmedroite=0,$equipementarmure=0,$equipementcoiffe=0,$equipementetendart=0,$toucher=0,$initiative=0,$sauvegarde=0,$endurance=0,$cac=0,$fo=0,$attaque=0,$intell=0,$ty=0,$capacite=0,$pilote=0,$co_pilote=0,$cout=0,$date_creation='',$tile=0,$camp=0,$chemin='',$dimension=0,$aattaquecetour=0,$sestdeplacecetour=0,$achargecetour=0,$pdv=0,$ingame=0) {
		//Generated by ObjectGenerator::generateConstruct() on 06/06/2017 11:24:56
		parent::__construct($id,$nom,$description,$def_av,$def_ar,$def_g,$def_d,$mouvement,$capacite,$pilote,$co_pilote,$experience,$equipementarmegauche,$equipementarmedroite,$equipementarmure,$equipementcoiffe,$equipementetendart,$toucher,$initiative,$sauvegarde,$endurance,$cac,$fo,$attaque,$intell,$ty,$camp,$cout,$date_creation,$chemin,$dimension,$aattaquecetour,$sestdeplacecetour,$achargecetour,$tile,$pdv,$ingame);
		$this->_membre = $membre;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__construct1]*/	/*[/TAG-__construct1]*/


	}


	public function __clone() {
		//Generated by ObjectGenerator::generateClone() on 06/06/2017 11:24:56

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__clone1]*/	/*[/TAG-__clone1]*/

		//Sur le clonage d'un objet on supprime l'identifiant
		$this->_description .= ' / Clone '.__CLASS__.' ID '.$this->_id;
		$this->_id = 0;
	}


	public function setMembre($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet() on 06/06/2017 11:24:56

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMembre1]*/
		if ($nouvelleValeur == 0 || strlen(trim($nouvelleValeur)) == 0) {
			throw new Exception("L'unite doit appartenir a un joueur (ID).");
		}
	/*[/TAG-setMembre1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_membre = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMembre2]*/	/*[/TAG-setMembre2]*/

	}

	protected function setMembreObject() {
		//Generated by ObjectGenerator::generateSet() on 06/06/2017 11:24:56

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMembreObject1]*/	/*[/TAG-setMembreObject1]*/

		if ($this->_membre > 0) {
			$this->_oMembre = FactoryMembre::getFromTableMembre($this->_membre);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setMembreObject2]*/	/*[/TAG-setMembreObject2]*/

	}




	public function getMembre() {
		//Generated by ObjectGenerator::generateGet() on 06/06/2017 11:24:56
		return $this->_membre;
	}

	public function getMembreObject() {
		//Generated by ObjectGenerator::generateGet() on 06/06/2017 11:24:56
		if (empty($this->_oMembre)) {
			$this->setMembreObject();
		}
		if ((empty($this->_oMembre) || is_null($this->_oMembre))&& $this->_membre > 0) {
			$this->setMembreObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getMembreObject1]*/	/*[/TAG-getMembreObject1]*/

		return $this->_oMembre;
	}



	public function __toString() {
		//Generated by ObjectGenerator::generateToString() on 06/06/2017 11:24:56
		$chaine = 'Objet '.get_class($this).':<br/>';
		$chaine .= 'Le champ id vaut '.$this->getId().'<br/>';
		$chaine .= 'Le champ membre vaut '.$this->getMembre().'<br/>';
		$chaine .= 'Le champ nom vaut '.$this->getNom().'<br/>';
		$chaine .= 'Le champ description vaut '.$this->getDescription().'<br/>';
		$chaine .= 'Le champ def_av vaut '.$this->getDef_av().'<br/>';
		$chaine .= 'Le champ def_ar vaut '.$this->getDef_ar().'<br/>';
		$chaine .= 'Le champ def_g vaut '.$this->getDef_g().'<br/>';
		$chaine .= 'Le champ def_d vaut '.$this->getDef_d().'<br/>';
		$chaine .= 'Le champ mouvement vaut '.$this->getMouvement().'<br/>';
		$chaine .= 'Le champ experience vaut '.$this->getExperience().'<br/>';
		$chaine .= 'Le champ equipementarmegauche vaut '.$this->getEquipementarmegauche().'<br/>';
		$chaine .= 'Le champ equipementarmedroite vaut '.$this->getEquipementarmedroite().'<br/>';
		$chaine .= 'Le champ equipementarmure vaut '.$this->getEquipementarmure().'<br/>';
		$chaine .= 'Le champ equipementcoiffe vaut '.$this->getEquipementcoiffe().'<br/>';
		$chaine .= 'Le champ equipementetendart vaut '.$this->getEquipementetendart().'<br/>';
		$chaine .= 'Le champ toucher vaut '.$this->getToucher().'<br/>';
		$chaine .= 'Le champ initiative vaut '.$this->getInitiative().'<br/>';
		$chaine .= 'Le champ sauvegarde vaut '.$this->getSauvegarde().'<br/>';
		$chaine .= 'Le champ endurance vaut '.$this->getEndurance().'<br/>';
		$chaine .= 'Le champ cac vaut '.$this->getCac().'<br/>';
		$chaine .= 'Le champ fo vaut '.$this->getFo().'<br/>';
		$chaine .= 'Le champ attaque vaut '.$this->getAttaque().'<br/>';
		$chaine .= 'Le champ intell vaut '.$this->getIntell().'<br/>';
		$chaine .= 'Le champ ty vaut '.$this->getTy().'<br/>';
		$chaine .= 'Le champ capacite vaut '.$this->getCapacite().'<br/>';
		$chaine .= 'Le champ pilote vaut '.$this->getPilote().'<br/>';
		$chaine .= 'Le champ co_pilote vaut '.$this->getCo_pilote().'<br/>';
		$chaine .= 'Le champ cout vaut '.$this->getCout().'<br/>';
		$chaine .= 'Le champ date_creation vaut '.$this->getDate_creation().'<br/>';
		$chaine .= 'Le champ tile vaut '.$this->getTile().'<br/>';
		$chaine .= 'Le champ camp vaut '.$this->getCamp().'<br/>';
		$chaine .= 'Le champ chemin vaut '.$this->getChemin().'<br/>';
		$chaine .= 'Le champ dimension vaut '.$this->getDimension().'<br/>';
		$chaine .= 'Le champ aattaquecetour vaut '.$this->getAattaquecetour().'<br/>';
		$chaine .= 'Le champ sestdeplacecetour vaut '.$this->getSestdeplacecetour().'<br/>';
		$chaine .= 'Le champ achargecetour vaut '.$this->getAchargecetour().'<br/>';
		$chaine .= 'Le champ pdv vaut '.$this->getPdv().'<br/>';
		$chaine .= 'Le champ ingame vaut '.$this->getIngame().'<br/>';

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__toString1]*/	/*[/TAG-__toString1]*/

		return $chaine;
	}

	public function save() {
		//Generated by ObjectGenerator::generateSave() on 06/06/2017 11:24:56
		if ($this->getId() > 0) {
			/* un identifiant superieur a 0 implique un ancien objet => UPDATE */
			$this->update();
		} else {
			$requete = 'INSERT INTO unite_joueur (id,membre,nom,description,def_av,def_ar,def_g,def_d,mouvement,experience,equipementarmegauche,equipementarmedroite,equipementarmure,equipementcoiffe,equipementetendart,toucher,initiative,sauvegarde,endurance,cac,fo,attaque,intell,ty,capacite,pilote,co_pilote,cout,date_creation,tile,camp,chemin,dimension,aattaquecetour,sestdeplacecetour,achargecetour,pdv,ingame)';
			$requete .= ' VALUES ';
			$requete .= '(';
			$requete .= '\'\','; //valeur forcee pour l'insertion
			$requete .= $this->getMembre().',';
			$requete .= '\''.$this->getNom().'\',';
			$requete .= '\''.$this->getDescription().'\',';
			$requete .= $this->getDef_av().',';
			$requete .= $this->getDef_ar().',';
			$requete .= $this->getDef_g().',';
			$requete .= $this->getDef_d().',';
			$requete .= $this->getMouvement().',';
			$requete .= $this->getExperience().',';
			$requete .= $this->getEquipementarmegauche().',';
			$requete .= $this->getEquipementarmedroite().',';
			$requete .= $this->getEquipementarmure().',';
			$requete .= $this->getEquipementcoiffe().',';
			$requete .= $this->getEquipementetendart().',';
			$requete .= $this->getToucher().',';
			$requete .= $this->getInitiative().',';
			$requete .= $this->getSauvegarde().',';
			$requete .= $this->getEndurance().',';
			$requete .= $this->getCac().',';
			$requete .= $this->getFo().',';
			$requete .= $this->getAttaque().',';
			$requete .= $this->getIntell().',';
			$requete .= $this->getTy().',';
			$requete .= $this->getCapacite().',';
			$requete .= $this->getPilote().',';
			$requete .= $this->getCo_pilote().',';
			$requete .= $this->getCout().',';
			$laDate = $this->getDate_creation();
			if (strlen($laDate) > 0) {
				$requete .= '\''.$laDate.'\',';
			} else {
				$requete .= 'NOW(),';
			}
			$requete .= $this->getTile().',';
			$requete .= $this->getCamp().',';
			$requete .= '\''.$this->getChemin().'\',';
			$requete .= $this->getDimension().',';
			$requete .= $this->getAattaquecetour().',';
			$requete .= $this->getSestdeplacecetour().',';
			$requete .= $this->getAchargecetour().',';
			$requete .= $this->getPdv().',';
			$requete .= $this->getIngame().',';
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ')';
			return $requete;
		}
	}

	public function update() {
		//Generated by ObjectGenerator::generateUpdate() on 06/06/2017 11:24:56
		if ($this->getId() == 0 || $this->getId() == null) {
			/* un identifiant 0 ou null implique un nouvel objet => INSERT */
			$this->save();
		} else {
			$requete = 'UPDATE unite_joueur SET ';
			$requete .= 'membre = '.$this->getMembre().',';
			$requete .= 'nom = \''.$this->getNom().'\',';
			$requete .= 'description = \''.$this->getDescription().'\',';
			$requete .= 'def_av = '.$this->getDef_av().',';
			$requete .= 'def_ar = '.$this->getDef_ar().',';
			$requete .= 'def_g = '.$this->getDef_g().',';
			$requete .= 'def_d = '.$this->getDef_d().',';
			$requete .= 'mouvement = '.$this->getMouvement().',';
			$requete .= 'experience = '.$this->getExperience().',';
			$requete .= 'equipementarmegauche = '.$this->getEquipementarmegauche().',';
			$requete .= 'equipementarmedroite = '.$this->getEquipementarmedroite().',';
			$requete .= 'equipementarmure = '.$this->getEquipementarmure().',';
			$requete .= 'equipementcoiffe = '.$this->getEquipementcoiffe().',';
			$requete .= 'equipementetendart = '.$this->getEquipementetendart().',';
			$requete .= 'toucher = '.$this->getToucher().',';
			$requete .= 'initiative = '.$this->getInitiative().',';
			$requete .= 'sauvegarde = '.$this->getSauvegarde().',';
			$requete .= 'endurance = '.$this->getEndurance().',';
			$requete .= 'cac = '.$this->getCac().',';
			$requete .= 'fo = '.$this->getFo().',';
			$requete .= 'attaque = '.$this->getAttaque().',';
			$requete .= 'intell = '.$this->getIntell().',';
			$requete .= 'ty = '.$this->getTy().',';
			$requete .= 'capacite = '.$this->getCapacite().',';
			$requete .= 'pilote = '.$this->getPilote().',';
			$requete .= 'co_pilote = '.$this->getCo_pilote().',';
			$requete .= 'cout = '.$this->getCout().',';
			$laDate = $this->getDate_creation();
			if (strlen($laDate) > 0) {
				$requete .= 'date_creation = \''.$laDate.'\',';
			} else {
				$requete .= 'date_creation = NOW(),';
			}
			$requete .= 'tile = '.$this->getTile().',';
			$requete .= 'camp = '.$this->getCamp().',';
			$requete .= 'chemin = \''.$this->getChemin().'\',';
			$requete .= 'dimension = '.$this->getDimension().',';
			$requete .= 'aattaquecetour = '.$this->getAattaquecetour().',';
			$requete .= 'sestdeplacecetour = '.$this->getSestdeplacecetour().',';
			$requete .= 'achargecetour = '.$this->getAchargecetour().',';
			$requete .= 'pdv = '.$this->getPdv().',';
			$requete .= 'ingame = '.$this->getIngame().',';
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ' WHERE id = '.$this->getId();
			return $requete;
		}
	}

	public function delete() {
		//Generated by ObjectGenerator::generateDelete() on 06/06/2017 11:24:56
		if ($this->getId() == 0 || $this->getId() == null) {
			/* ERREUR A FAIRE SORTIR */
			/* TODO */
		} else {
			return 'DELETE FROM unite_joueur WHERE id = '.$this->getId();
		}
	}

	public function getParent() {
		//Generated by ObjectGenerator::generateGetParent() on 06/06/2017 11:24:56
		return ('parent::__construct($id,$membre,$nom,$description,$def_av,$def_ar,$def_g,$def_d,$mouvement,$experience,$equipementarmegauche,$equipementarmedroite,$equipementarmure,$equipementcoiffe,$equipementetendart,$toucher,$initiative,$sauvegarde,$endurance,$cac,$fo,$attaque,$intell,$ty,$capacite,$pilote,$co_pilote,$cout,$date_creation,$tile,$camp,$chemin,$dimension,$aattaquecetour,$sestdeplacecetour,$achargecetour,$pdv,$ingame);');
	}

	public function getAttributes() {
		//Generated by ObjectGenerator::generateGetAttributes() on 06/06/2017 11:24:56
		$result = array();
		$result2 = array();
		$reflection = new ReflectionClass($this);
		$result = $reflection->getdefaultProperties();
		$result = array_keys($result);
		foreach ($result AS $data) {
			$result2[] = substr($data,1);
		}
		return $result2;
	}

	public function compareTo($object) {
		//Generated by ObjectGenerator::generateCompareTo() on 06/06/2017 11:24:56
		$data = array();
		if ($object instanceof Unite_joueur) {
			if ($this->_id != $object->getId()) {
				$data['id'] = $object->getId();
			}
			if ($this->_membre != $object->getMembre()) {
				$data['membre'] = $object->getMembre();
			}
			if ($this->_nom != $object->getNom()) {
				$data['nom'] = $object->getNom();
			}
			if ($this->_description != $object->getDescription()) {
				$data['description'] = $object->getDescription();
			}
			if ($this->_def_av != $object->getDef_av()) {
				$data['def_av'] = $object->getDef_av();
			}
			if ($this->_def_ar != $object->getDef_ar()) {
				$data['def_ar'] = $object->getDef_ar();
			}
			if ($this->_def_g != $object->getDef_g()) {
				$data['def_g'] = $object->getDef_g();
			}
			if ($this->_def_d != $object->getDef_d()) {
				$data['def_d'] = $object->getDef_d();
			}
			if ($this->_mouvement != $object->getMouvement()) {
				$data['mouvement'] = $object->getMouvement();
			}
			if ($this->_experience != $object->getExperience()) {
				$data['experience'] = $object->getExperience();
			}
			if ($this->_equipementarmegauche != $object->getEquipementarmegauche()) {
				$data['equipementarmegauche'] = $object->getEquipementarmegauche();
			}
			if ($this->_equipementarmedroite != $object->getEquipementarmedroite()) {
				$data['equipementarmedroite'] = $object->getEquipementarmedroite();
			}
			if ($this->_equipementarmure != $object->getEquipementarmure()) {
				$data['equipementarmure'] = $object->getEquipementarmure();
			}
			if ($this->_equipementcoiffe != $object->getEquipementcoiffe()) {
				$data['equipementcoiffe'] = $object->getEquipementcoiffe();
			}
			if ($this->_equipementetendart != $object->getEquipementetendart()) {
				$data['equipementetendart'] = $object->getEquipementetendart();
			}
			if ($this->_toucher != $object->getToucher()) {
				$data['toucher'] = $object->getToucher();
			}
			if ($this->_initiative != $object->getInitiative()) {
				$data['initiative'] = $object->getInitiative();
			}
			if ($this->_sauvegarde != $object->getSauvegarde()) {
				$data['sauvegarde'] = $object->getSauvegarde();
			}
			if ($this->_endurance != $object->getEndurance()) {
				$data['endurance'] = $object->getEndurance();
			}
			if ($this->_cac != $object->getCac()) {
				$data['cac'] = $object->getCac();
			}
			if ($this->_fo != $object->getFo()) {
				$data['fo'] = $object->getFo();
			}
			if ($this->_attaque != $object->getAttaque()) {
				$data['attaque'] = $object->getAttaque();
			}
			if ($this->_intell != $object->getIntell()) {
				$data['intell'] = $object->getIntell();
			}
			if ($this->_ty != $object->getTy()) {
				$data['ty'] = $object->getTy();
			}
			if ($this->_capacite != $object->getCapacite()) {
				$data['capacite'] = $object->getCapacite();
			}
			if ($this->_pilote != $object->getPilote()) {
				$data['pilote'] = $object->getPilote();
			}
			if ($this->_co_pilote != $object->getCo_pilote()) {
				$data['co_pilote'] = $object->getCo_pilote();
			}
			if ($this->_cout != $object->getCout()) {
				$data['cout'] = $object->getCout();
			}
			if ($this->_date_creation != $object->getDate_creation()) {
				$data['date_creation'] = $object->getDate_creation();
			}
			if ($this->_tile != $object->getTile()) {
				$data['tile'] = $object->getTile();
			}
			if ($this->_camp != $object->getCamp()) {
				$data['camp'] = $object->getCamp();
			}
			if ($this->_chemin != $object->getChemin()) {
				$data['chemin'] = $object->getChemin();
			}
			if ($this->_dimension != $object->getDimension()) {
				$data['dimension'] = $object->getDimension();
			}
			if ($this->_aattaquecetour != $object->getAattaquecetour()) {
				$data['aattaquecetour'] = $object->getAattaquecetour();
			}
			if ($this->_sestdeplacecetour != $object->getSestdeplacecetour()) {
				$data['sestdeplacecetour'] = $object->getSestdeplacecetour();
			}
			if ($this->_achargecetour != $object->getAchargecetour()) {
				$data['achargecetour'] = $object->getAchargecetour();
			}
			if ($this->_pdv != $object->getPdv()) {
				$data['pdv'] = $object->getPdv();
			}
			if ($this->_ingame != $object->getIngame()) {
				$data['ingame'] = $object->getIngame();
			}
		}
		return $data;
	}

	public function encodeDecodeJSON($json_str='') {
		//Generated by ObjectGenerator::generateEncodeDecodeJSON() on 06/06/2017 11:24:56
		if ($json_str == '') {
			// Objet standard a remplir
			$json= new stdClass();
			foreach ($this as $key => $value) {
				if (substr($key,0,1) == '_') {
					$key = substr($key,1);
					//on evite de faire sortir les objet fonctionnels
					if (strtolower(substr($key,0,1)) != 'o') {
						$json->$key = $value;
					}
				}
				$json->$key = $value;
			}
			return json_encode($json);
		} else {
			/* decodage et hydratation des datas JSON */
			$json = json_decode($json_str, 1);
			foreach ($json as $key => $value) {
				$method = 'set'.ucfirst($key);
				//Si la methode existe alors on l'utilise
				if (method_exists($this, $method)) {
					$this->$method($value);
				}
			}
		}
	}

	public function getClass() {
		//Generated by ObjectGenerator::generateGetClass() on 06/06/2017 11:24:56
		return get_class($this);
	}

	public function getEmpty() {
		//Generated by ObjectGenerator::generateIsEmpty() on 06/06/2017 11:24:56
		return $this->_empty;
	}

	public function affiche() {
		//Generated by ObjectGenerator::generateAffiche() on 06/06/2017 11:24:56
		/* Chargement de Smarty */
		require_once(_SMARTY_LOAD_);
		$smarty->assign('unite_joueur',$this);
		$smarty->assign('aListeMethodes',get_class_methods($this));
		$smarty->assign('urlVersMiniature',_URL_MINIATURES_.$this->getNom().'.jpg');
		/* Appel de l'affichage pour la classe en cour d'utilisation */
		$smarty->display(_TEMPLATES_BASE_.'classes/Unite_joueur.tpl');
	}


	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Unite_joueur21]*/
	/////////////////////////////////////////////
	// SURCHARGE DES METHODE DE LA CLASSE MERE //
	/////////////////////////////////////////////
	protected function setEquipementarmegaucheObject() {
		$this->_oEquipementarmegauche = FactoryEquipement_joueur::getFromTableEquipement_joueur($this->_equipementarmegauche);
	}
	
	protected function setEquipementarmedroiteObject() {
		$this->_oEquipementarmedroite = FactoryEquipement_joueur::getFromTableEquipement_joueur($this->_equipementarmedroite);
	}
	
	protected function setEquipementarmureObject() {
		$this->_oEquipementarmure = FactoryEquipement_joueur::getFromTableEquipement_joueur($this->_equipementarmure);
	}
	
	protected function setEquipementcoiffeObject() {
		$this->_oEquipementcoiffe = FactoryEquipement_joueur::getFromTableEquipement_joueur($this->_equipementcoiffe);
	}
	
	protected function setEquipementetendartObject() {
		$this->_oEquipementetendart = FactoryEquipement_joueur::getFromTableEquipement_joueur($this->_equipementetendart);
	}
	/*[/TAG-Unite_joueur21]*/

}
?>