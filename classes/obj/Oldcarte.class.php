<?php
		//Generated by ObjectGenerator::generate()
class Oldcarte {

	/* identifiant composite Id_carte */
	protected $_id_carte; /* int(11) unsigned */
	/* liste des objets Id_carte */
	protected $_oId_carte; /* id_carte Object*/

	protected $_x; /* int(11) */
	protected $_y; /* int(11) */
	protected $_vision; /* enum('0','1') */

	/* identifiant composite Terrain */
	protected $_terrain; /* varchar(25) */
	/* liste des objets Terrain */
	protected $_oTerrain; /* terrain Object*/

	protected $_empty = true; // permet de savoir si l'objet est vide

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Oldcarte11]*/	/*[/TAG-Oldcarte11]*/


	public function __construct($id_carte=0,$x=0,$y=0,$vision='',$terrain='') {
		//Generated by ObjectGenerator::generateConstruct()
		$this->_id_carte = $id_carte;
		$this->_x = $x;
		$this->_y = $y;
		$this->_vision = $vision;
		$this->_terrain = $terrain;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__construct1]*/	/*[/TAG-__construct1]*/


	}


	public function __clone() {
		//Generated by ObjectGenerator::generateClone()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__clone1]*/	/*[/TAG-__clone1]*/

		//Sur le clonage d'un objet on supprime l'identifiant
		$this->_description .= ' / Clone '.__CLASS__.' ID '.$this->_id;
		$this->_id = 0;
	}


	public function setId_carte($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setId_carte1]*/	/*[/TAG-setId_carte1]*/

		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_id_carte = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setId_carte2]*/	/*[/TAG-setId_carte2]*/

	}



	public function setX($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setX1]*/	/*[/TAG-setX1]*/

		$this->_x = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setX2]*/	/*[/TAG-setX2]*/

	}



	public function setY($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setY1]*/	/*[/TAG-setY1]*/

		$this->_y = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setY2]*/	/*[/TAG-setY2]*/

	}



	public function setVision($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setVision1]*/	/*[/TAG-setVision1]*/

		$this->_vision = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setVision2]*/	/*[/TAG-setVision2]*/

	}



	public function setTerrain($nouvelleValeur) {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTerrain1]*/	/*[/TAG-setTerrain1]*/

		/* La modification de l'identifiant DB est interdite SAUF SI l'objet est vide au depart */
		if ($this->getEmpty() === false) {
		return;
		}
		/* un identifiant est toujours un entier non nul */
		if (!intval($nouvelleValeur) || $nouvelleValeur < 0) {
			return false;
		}
		$this->_terrain = $nouvelleValeur;

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTerrain2]*/	/*[/TAG-setTerrain2]*/

	}

	protected function setTerrainObject() {
		//Generated by ObjectGenerator::generateSet()

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTerrainObject1]*/	/*[/TAG-setTerrainObject1]*/

		if ($this->_terrain > 0) {
			$this->_oTerrain = FactoryTerrain::getFromTableTerrain($this->_terrain);
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-setTerrainObject2]*/	/*[/TAG-setTerrainObject2]*/

	}




	public function getId_carte() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_id_carte;
	}



	public function getX() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_x;
	}



	public function getY() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_y;
	}



	public function getVision() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_vision;
	}



	public function getTerrain() {
		//Generated by ObjectGenerator::generateGet()
		return $this->_terrain;
	}

	public function getTerrainObject() {
		//Generated by ObjectGenerator::generateGet()
		if (empty($this->_oTerrain)) {
			$this->setTerrainObject();
		}
		if ((empty($this->_oTerrain) || is_null($this->_oTerrain))&& $this->_terrain > 0) {
			$this->setTerrainObject();
		}

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-getTerrainObject1]*/	/*[/TAG-getTerrainObject1]*/

		return $this->_oTerrain;
	}



	public function __toString() {
		//Generated by ObjectGenerator::generateToString()
		$chaine = 'Objet '.get_class($this).':<br/>';
		if (!empty($this->_id_carte)) {
			$chaine .= '<br/>_carte associ&eacute;: '.$this->_id_carte.'<br/>';
		} else {
			$chaine .= 'Pas de _carte associ&eacute;<br/>';
		}
		$chaine .= 'Le champ x vaut '.$this->getX().'<br/>';
		$chaine .= 'Le champ y vaut '.$this->getY().'<br/>';
		$chaine .= 'Le champ vision vaut '.$this->getVision().'<br/>';
		$chaine .= 'Le champ terrain vaut '.$this->getTerrain().'<br/>';

	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-__toString1]*/	/*[/TAG-__toString1]*/

		return $chaine;
	}

	public function save() {
		//Generated by ObjectGenerator::generateSave()
		if ($this->getId() > 0) {
			/* un identifiant superieur a 0 implique un ancien objet => UPDATE */
			$this->update();
		} else {
			$requete = 'INSERT INTO oldcarte (id_carte,x,y,vision,terrain)';
			$requete .= ' VALUES ';
			$requete .= '(';
			$requete .= '\'\','; //valeur forcee pour l'insertion
			$requete .= $this->getX().',';
			$requete .= $this->getY().',';
			$requete .= '\''.$this->getVision().'\',';
			$requete .= '\''.$this->getTerrain().'\',';
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ')';
			return $requete;
		}
	}

	public function update() {
		//Generated by ObjectGenerator::generateUpdate()
		if ($this->getId() == 0 || $this->getId() == null) {
			/* un identifiant 0 ou null implique un nouvel objet => INSERT */
			$this->save();
		} else {
			$requete = 'UPDATE oldcarte SET ';
			$requete .= 'id_carte = '.$this->getId_carte().',';
			$requete .= 'x = '.$this->getX().',';
			$requete .= 'y = '.$this->getY().',';
			$requete .= 'vision = \''.$this->getVision().'\',';
			$requete .= 'terrain = \''.$this->getTerrain().'\',';
			$requete = substr($requete,0,strlen($requete)-1);
			$requete .= ' WHERE id = '.$this->getId();
			return $requete;
		}
	}

	public function delete() {
		//Generated by ObjectGenerator::generateDelete()
		if ($this->getId() == 0 || $this->getId() == null) {
			/* ERREUR A FAIRE SORTIR */
			/* TODO */
		} else {
			return 'DELETE FROM oldcarte WHERE id = '.$this->getId();
		}
	}

	public function getParent() {
		//Generated by ObjectGenerator::generateGetParent()
		return ('parent::__construct($id_carte,$x,$y,$vision,$terrain);');
	}

	public function getAttributes() {
		//Generated by ObjectGenerator::generateGetAttributes()
		$result = array();
		$result2 = array();
		$reflection = new ReflectionClass($this);
		$result = $reflection->getdefaultProperties();
		$result = array_keys($result);
		foreach ($result AS $data) {
			$result2[] = substr($data,1);
		}
		return $result2;
	}

	public function compareTo($object) {
		//Generated by ObjectGenerator::generateCompareTo()
		$data = array();
		if ($object instanceof Oldcarte) {
			if ($this->_id_carte != $object->getId_carte()) {
				$data['id_carte'] = $object->getId_carte();
			}
			if ($this->_x != $object->getX()) {
				$data['x'] = $object->getX();
			}
			if ($this->_y != $object->getY()) {
				$data['y'] = $object->getY();
			}
			if ($this->_vision != $object->getVision()) {
				$data['vision'] = $object->getVision();
			}
			if ($this->_terrain != $object->getTerrain()) {
				$data['terrain'] = $object->getTerrain();
			}
		}
		return $data;
	}

	public function encodeDecodeJSON($json_str='') {
		//Generated by ObjectGenerator::generateEncodeDecodeJSON()
		if ($json_str == '') {
			// Objet standard a remplir
			$json= new stdClass();
			foreach ($this as $key => $value) {
				if (substr($key,0,1) == '_') {
					$key = substr($key,1);
					//on evite de faire sortir les objet fonctionnels
					if (strtolower(substr($key,0,1)) != 'o') {
						$json->$key = $value;
					}
				}
				$json->$key = $value;
			}
			return json_encode($json);
		} else {
			/* decodage et hydratation des datas JSON */
			$json = json_decode($json_str, 1);
			foreach ($json as $key => $value) {
				$method = 'set'.ucfirst($key);
				//Si la methode existe alors on l'utilise
				if (method_exists($this, $method)) {
					$this->$method($value);
				}
			}
		}
	}

	public function getClass() {
		//Generated by ObjectGenerator::generateGetClass()
		return get_class($this);
	}

	public function getEmpty() {
		//Generated by ObjectGenerator::generateIsEmpty()
		return $this->_empty;
	}

	public function affiche() {
		//Generated by ObjectGenerator::generateAffiche()
		/* Chargement de Smarty */
		require_once(_SMARTY_LOAD_);
		$smarty->assign('oldcarte',$this);
		$smarty->assign('aListeMethodes',get_class_methods($this));
		$smarty->assign('urlVersMiniature',_URL_MINIATURES_.$this->getNom().'.jpg');
		/* Appel de l'affichage pour la classe en cour d'utilisation */
		$smarty->display(_TEMPLATES_BASE_.'classes/Oldcarte.tpl');
	}


	/*
	 * Entre ces deux balises vous pourrez mettre votre code specifique a la classe.
	 * Il sera preserve lors de la reconstruction automatique.
	 */
	/*[TAG-Oldcarte21]*/	/*[/TAG-Oldcarte21]*/

}
?>